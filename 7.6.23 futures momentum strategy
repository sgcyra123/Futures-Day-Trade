{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "f17c532b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from matplotlib import pyplot as plt\n",
    "import random\n",
    "import matplotlib.ticker as ticker"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1bf0f71d",
   "metadata": {},
   "source": [
    "## creating a class to define functions for downloading data, defining backtest timeframe and account value, buying and selling 4 different securities (in this case ES, YM, NQ, and RTY futures contracts),  performing statistical analysis, and plotting the equity curve of the strategy compared to a benchmark"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "5d3e6314",
   "metadata": {},
   "outputs": [],
   "source": [
    "class IterativeBase():\n",
    "    def __init__(self, symbol, start, end, amount, use_spread = True):\n",
    "        self.symbol=symbol\n",
    "        self.start=start\n",
    "        self.end=end\n",
    "        self.initial_balance = amount\n",
    "        self.current_balance = amount\n",
    "        self.esunits = 0\n",
    "        self.estrades = 0\n",
    "        self.nqunits = 0\n",
    "        self.nqtrades = 0\n",
    "        self.ymunits = 0\n",
    "        self.ymtrades = 0\n",
    "        self.rtytrades = 0\n",
    "        self.rtyunits = 0\n",
    "        self.nqposition = 0\n",
    "        self.ymposition = 0\n",
    "        self.esposition = 0\n",
    "        self.rtyposition = 0\n",
    "        self.nq=1\n",
    "        self.cumnav = []\n",
    "        self.cumnavdf = []\n",
    "        self.xmethod = []\n",
    "        self.use_spread=use_spread\n",
    "        self.firstfive = 0\n",
    "        self.simdf = pd.DataFrame()\n",
    "        self.get_data()\n",
    "        \n",
    "    def get_data(self):\n",
    "        test= pd.read_csv(\"5mindataESYMNQ\", parse_dates=[0], index_col=0).dropna()\n",
    "#         test.index = pd.to_datetime(test.index, utc=True)\n",
    "#         test = test.tz_convert('US/Eastern')\n",
    "        test= test.loc[self.start:self.end]\n",
    "        self.data = test\n",
    "        \n",
    "    def plot_data(self, cols = None):\n",
    "        if cols is None:\n",
    "            cols=\"ESClose\"\n",
    "        self.data[cols].plot(figsize = (12,8))\n",
    "        \n",
    "    def get_values(self, bar):\n",
    "        date= str(self.data.index[bar])\n",
    "        esclose= self.data[\"ESClose\"].iloc[bar]\n",
    "        nqclose= self.data[\"NQClose\"].iloc[bar]\n",
    "        ymclose= self.data[\"YMClose\"].iloc[bar]\n",
    "        rtyclose= self.data[\"RTYClose\"].iloc[bar]\n",
    "        return date, esclose, nqclose, ymclose, rtyclose\n",
    "    \n",
    "    \n",
    "    def print_current_balance(self, bar):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        print(\"{}| Current Balance: {}\".format(date, round(self.current_balance, 2)))\n",
    "        \n",
    "    def buy_es(self, bar, esunits = None, amount = None):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        if self.use_spread:\n",
    "            esclose+= esclose*.0000652\n",
    "        if amount is not None:\n",
    "            esunits = int(amount / esclose)\n",
    "        self.current_balance -= esunits * esclose\n",
    "        self.esunits += esunits\n",
    "        self.estrades += 1\n",
    "        print(\"{}| Bot {} ES @ {}\".format(date, esunits, esclose))\n",
    "    \n",
    "    def sell_es(self, bar, esunits = None, amount=None):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        if self.use_spread:\n",
    "            esclose-= esclose*.0000652\n",
    "        if amount is not None:\n",
    "            esunits = int(amount / esclose)\n",
    "        self.current_balance += esunits * esclose\n",
    "        self.esunits -= esunits\n",
    "        self.estrades += 1\n",
    "        print(\"{}| Sold {} ES @ {}\".format(date, esunits, esclose))  \n",
    "        \n",
    "    def buy_nq(self, bar, nqunits = None, amount = None):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        if self.use_spread:\n",
    "            nqclose+= nqclose*.0000093\n",
    "        if amount is not None:\n",
    "            nqunits = int(amount / nqclose)\n",
    "        self.current_balance -= nqunits * nqclose\n",
    "        self.nqunits += nqunits\n",
    "        self.nqtrades += 1\n",
    "        print(\"{}| Bot {} NQ @ {}\".format(date, nqunits, nqclose))\n",
    "        \n",
    "    def sell_nq(self, bar, nqunits = None, amount = None):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        if self.use_spread:\n",
    "            nqclose-= nqclose*.0000093 # ROUNDTRIP COMMISSION ONLY. ASSUMES lIMITS ORDERS. MARKET ORDERS ON YM\n",
    "        if amount is not None:\n",
    "            nqunits = int(amount / nqclose)\n",
    "        self.current_balance += nqunits * nqclose\n",
    "        self.nqunits -= nqunits\n",
    "        self.nqtrades += 1\n",
    "        print(\"{}| Sold {} NQ @ {}\".format(date, nqunits, nqclose))\n",
    "        \n",
    "    def buy_ym(self, bar, ymunits = None, amount = None):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        if self.use_spread:\n",
    "            ymclose+= ymclose*.00012 #.00019 assumes 6 pt spread. ROUNDTRIP COMMISSION + FULL SPREAD.\n",
    "        if amount is not None:\n",
    "            ymunits = int(amount / ymclose)\n",
    "        self.current_balance -= ymunits * ymclose\n",
    "        self.ymunits += ymunits\n",
    "        self.ymtrades += 1\n",
    "        print(\"{}| Bot {} YM @ {}\".format(date, ymunits, ymclose))\n",
    "    \n",
    "    def sell_ym(self, bar, ymunits = None, amount = None):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        if self.use_spread:\n",
    "            ymclose-= ymclose*.00012       \n",
    "        if amount is not None:\n",
    "            ymunits = int(amount / ymclose)\n",
    "        self.current_balance += ymunits * ymclose\n",
    "        self.ymunits -= ymunits\n",
    "        self.ymtrades += 1\n",
    "        print(\"{}| Sold {} YM @ {}\".format(date, ymunits, ymclose))\n",
    "    \n",
    "    def buy_rty(self, bar, rtyunits = None):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        self.current_balance -= rtyunits * rtyclose\n",
    "        self.rtyunits += rtyunits\n",
    "        self.rtytrades += 1\n",
    "        print(\"{}| Bot ES @ {}\".format(date, rtyclose))\n",
    "    \n",
    "    def sell_rty(self, bar, rtyunits = None):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        self.current_balance += rtyunits * rtyclose\n",
    "        self.rtyunits -= rtyunits\n",
    "        self.rtytrades += 1\n",
    "        print(\"{}| Sold RTY @ {}\".format(date, rtyclose)) \n",
    "        \n",
    "    def print_current_nav(self, bar):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        nav = self.current_balance + (self.esunits * esclose)+ (self.rtyunits * rtyclose) + (self.nqunits * nqclose) + (self.ymunits * ymclose)\n",
    "        self.cumnavdf.append([date, nav, esclose])\n",
    "        self.cumnav.append(nav)\n",
    "#         x=np.log(self.cumnav[-1]/self.cumnav[-2])\n",
    "        print(\"{} | Net Asset Value = {}\".format(date, round(nav,2)))\n",
    "    \n",
    "    def close_position(self, bar):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        self.current_balance += self.esunits * esclose # closing final position (works with short and long!)\n",
    "        self.current_balance += self.nqunits * nqclose\n",
    "        self.current_balance += self.ymunits * ymclose\n",
    "        self.current_balance += self.rtyunits * rtyclose\n",
    "        self.esunits = 0 # setting position to neutral\n",
    "        self.nqunits = 0\n",
    "        self.ymunits = 0\n",
    "        self.rtyunits = 0\n",
    "        self.nqtrades += 1\n",
    "        self.estrades += 1\n",
    "        #self.ymtrades += 1\n",
    "        #self.rtytrades += 1   \n",
    "    def method(self, bar):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        units=self.nqunits\n",
    "        self.xmethod.append(units)\n",
    "    \n",
    "    def stats(self,bar):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        simdf = pd.DataFrame(self.cumnavdf, columns=['Datetime', 'nav', 'NQ'])\n",
    "        simdf['Datetime'] = pd.to_datetime(simdf['Datetime'])   \n",
    "        simdf.set_index('Datetime',inplace=True)\n",
    "        simdf[\"NQlogreturn\"]=np.log(simdf[\"NQ\"] / simdf[\"NQ\"].shift(1))\n",
    "        simdf[\"logret\"]=np.log(simdf.nav/simdf.nav.shift(1))\n",
    "        simdf[\"cumlogret\"]=np.cumsum(simdf.logret).apply(np.exp)\n",
    "        simdf[\"nqcumlogret\"]=np.cumsum(simdf.NQlogreturn).apply(np.exp)\n",
    "        simdf[\"cummax\"]=simdf.cumlogret.cummax()\n",
    "        simdf[\"drawdown\"]=-(simdf[\"cumlogret\"]-simdf[\"cummax\"])/simdf[\"cummax\"]\n",
    "        logret=simdf[\"logret\"]\n",
    "        simdf[\"simpreturn\"]=simdf.nav/simdf.nav.shift(1)-1\n",
    "        self.simdf=simdf\n",
    "        logretdown=np.where(logret<0,logret,0)\n",
    "        downside_dev=np.sqrt(np.mean(logretdown**2))\n",
    "        mean=simdf[\"logret\"].mean()\n",
    "        std=simdf[\"logret\"].std()\n",
    "        meansimp=simdf[\"simpreturn\"].mean()\n",
    "        annualmean=mean*252\n",
    "        sortino=(mean-.00012)/downside_dev*np.sqrt(252)\n",
    "        maxdrawdown=simdf.drawdown.max()\n",
    "        skew=logret.skew()\n",
    "        kurt=logret.kurt()\n",
    "        years=(self.data.index[-1]-self.data.index[1]).days/365\n",
    "        cagr=(self.cumnav[-1]/self.initial_balance)**(1/years)-1\n",
    "        benchmarkcagr=(simdf[\"NQ\"].iloc[-1] / simdf[\"NQ\"].iloc[0])**(1/years)-1\n",
    "        maxdayloss= simdf[\"simpreturn\"].min()\n",
    "        dd50=(simdf[\"drawdown\"]>.5).mean()\n",
    "        dd25=(simdf[\"drawdown\"]>.25).mean()\n",
    "        var=simdf[\"simpreturn\"].var()\n",
    "        kelly=meansimp/var\n",
    "        print(\"Ave. log Return per trade = {}\".format(round(mean, 5)))\n",
    "        print(\"Ave. simple Return per trade = {}\".format(round(meansimp, 5)))\n",
    "        print(\"Std per trade = {}\".format(std))\n",
    "        print(\"Downside dev per trade = {}\".format(downside_dev))\n",
    "        print(\"CAGR = {}%\".format(round(cagr*100, 1)))\n",
    "        print(\"Benchmark CAGR = {}%\".format(round(benchmarkcagr*100,1)))\n",
    "        print(\"Max Drawdown = {}%\".format(round(-maxdrawdown*100, 1)))\n",
    "        print(\"Max Daily Loss = {}%\".format(round(maxdayloss*100, 1)))\n",
    "        print(\"% days down 50% from peak = {}%\".format(round(dd50*100, 1)))\n",
    "        print(\"% days down 25% from peak = {}%\".format(round(dd25*100, 1)))\n",
    "        print(\"Sortino = {}\".format(round(sortino, 2)))\n",
    "        print(\"Skew = {}\".format(round(skew, 2)))\n",
    "        print(\"Kurtosis = {}\".format(round(kurt, 2)))\n",
    "        print(\"Kelly Criterion = {}\".format(round(kelly, 2)))\n",
    "#         plt.yscale(\"log\")\n",
    "        simdf['Strategy Equity']=simdf['cumlogret']*self.initial_balance\n",
    "        simdf['Benchmark']=simdf['nqcumlogret']*self.initial_balance\n",
    "        colstokeep=[\"Strategy Equity\", \"Benchmark\"]\n",
    "        simdf=simdf[colstokeep]\n",
    "        ax=simdf.plot(figsize=(9,6))\n",
    "        ax.set_ylabel('Equity')\n",
    "        plt.show()\n",
    "        \n",
    "    def close_pos(self, bar):\n",
    "        date, esclose, nqclose, ymclose, rtyclose = self.get_values(bar)\n",
    "        print(75 * \"-\")\n",
    "        print(\"{} | +++ CLOSING FINAL POSITION +++\".format(date))\n",
    "        self.current_balance += self.esunits * esclose # closing final position (works with short and long!)\n",
    "        self.current_balance += self.nqunits * nqclose\n",
    "        self.current_balance += self.ymunits * ymclose\n",
    "        self.current_balance += self.rtyunits * rtyclose\n",
    "        print(\"{} | closing position of {} ES for {}\".format(date, self.esunits, esclose))\n",
    "        print(\"{} | closing position of {} NQ for {}\".format(date, self.nqunits, nqclose))\n",
    "        print(\"{} | closing position of {} YM for {}\".format(date, self.ymunits, ymclose))\n",
    "        print(\"{} | closing position of {} RTY for {}\".format(date, self.rtyunits, rtyclose))\n",
    "        self.esunits = 0 # setting position to neutral\n",
    "        self.nqunits = 0\n",
    "        self.ymunits = 0\n",
    "        self.rtyunits = 0\n",
    "        self.nqtrades += 1\n",
    "        self.estrades += 1\n",
    "        self.ymtrades += 1\n",
    "        self.rtytrades += 1\n",
    "        perf = (self.current_balance - self.initial_balance) / self.initial_balance * 100\n",
    "        self.print_current_balance(bar)\n",
    "        print(\"{} | net performance (%) = {}\".format(date, round(perf, 2) ))\n",
    "        print(\"{} | number of trades executed = {}\".format(date, ((self.estrades+self.nqtrades+self.ymtrades+self.rtytrades)/2)))\n",
    "        print(\"per trade: {}\".format((self.current_balance - self.initial_balance) /((self.estrades+self.nqtrades+self.ymtrades+self.rtytrades)/2)))\n",
    "        #self.stats(bar)\n",
    "        print(75 * \"-\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e1a5241",
   "metadata": {},
   "source": [
    "## Creating a class to define the trading strategy and perform an iterative backtest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "63a9ea02",
   "metadata": {},
   "outputs": [],
   "source": [
    "class Momentum(IterativeBase):\n",
    "    \n",
    "    \n",
    "    def ym_nq_momentum(self, period, dayperiod, entryhr, checkhr, exithr, x, y, lev):\n",
    "        \n",
    "        # nice printout\n",
    "        stm = \"Testing Intraday Momentum Strategy , periods:{}, entry:{}, checkhr:{}, exit:{}, leverage:{} \".format(period, entryhr, checkhr, exithr, lev)\n",
    "        print(\"-\" * 75)\n",
    "        print(stm)\n",
    "        print(\"-\" * 75)\n",
    "        \n",
    "        # reset \n",
    "        self.esunits = 0\n",
    "        self.estrades = 0\n",
    "        self.nqunits = 0\n",
    "        self.nqtrades = 0\n",
    "        self.ymunits = 0\n",
    "        self.ymtrades = 0\n",
    "        self.nqposition = 0\n",
    "        self.ymposition = 0\n",
    "        self.esposition = 0\n",
    "        \n",
    "        self.current_balance = self.initial_balance  # reset initial capital\n",
    "        self.get_data() # reset dataset\n",
    "        self.firstfive = 0\n",
    "        self.bestreturndow = pd.DataFrame()\n",
    "        self.bestreturnnas = pd.DataFrame()\n",
    "        self.dummynas=0\n",
    "        self.dummydow=0\n",
    "        self.besthourdow=0\n",
    "        self.besthournas=0\n",
    "\n",
    "        self.data[\"NQxperiodReturn\"]=np.log(self.data[\"NQClose\"]/self.data[\"NQClose\"].shift(period))\n",
    "        self.data[\"YMxperiodReturn\"]=np.log(self.data[\"YMClose\"]/self.data[\"YMClose\"].shift(period))\n",
    "        \n",
    "        \n",
    "        self.data[\"ESyperiodReturn\"]=np.log(self.data[\"ESClose\"]/self.data[\"ESClose\"].shift(dayperiod))\n",
    "        self.data[\"NQyperiodReturn\"]=np.log(self.data[\"NQClose\"]/self.data[\"NQClose\"].shift(dayperiod))\n",
    "        self.data[\"YMyperiodReturn\"]=np.log(self.data[\"YMClose\"]/self.data[\"YMClose\"].shift(dayperiod)) \n",
    "        self.data[\"NQret\"]=np.log(self.data[\"NQClose\"]/self.data[\"NQClose\"].shift(1))\n",
    "        self.data[\"YMret\"]=np.log(self.data[\"YMClose\"]/self.data[\"YMClose\"].shift(1))\n",
    "        self.data[\"ESret\"]=np.log(self.data[\"ESClose\"]/self.data[\"ESClose\"].shift(1))\n",
    "        self.data[\"NQVol\"]=self.data.NQret.rolling(2000).std()\n",
    "        self.data[\"YMvol\"]=self.data.YMret.rolling(2000).std()\n",
    "        self.data[\"ESvol\"]=self.data.ESret.rolling(2000).std()\n",
    "        self.data[\"YMmultiplier\"]=self.data.NQVol/self.data.YMvol \n",
    "        self.data[\"ESmultiplier\"]=self.data.NQVol/self.data.ESvol \n",
    "        \n",
    "        #add hour\n",
    "        self.data[\"hour\"]=self.data.index.hour\n",
    "        self.data['day'] = self.data.index.weekday\n",
    "        self.data[\"month\"]=self.data.index.month\n",
    "        self.data.dropna(inplace=True)\n",
    "        \n",
    "        for bar in range(len(self.data)-1):\n",
    "        #Saves net asset value into self.cumnavdf once per day    \n",
    "            if self.data[\"hour\"].iloc[bar]==23 and self.data[\"hour\"].iloc[bar-1]!=23:\n",
    "                self.print_current_nav(bar)\n",
    "           \n",
    "        #Closes open positions during \"exithr\"          \n",
    "            if self.nqposition!=0:   \n",
    "                if self.data[\"hour\"].iloc[bar]==exithr and self.data[\"hour\"].iloc[bar-5]==exithr and self.data[\"hour\"].iloc[bar-6]!=exithr:\n",
    "                        self.close_position(bar)\n",
    "                        self.nqposition=0\n",
    "                        self.ymposition=0\n",
    "                        self.esposition=0\n",
    "                         \n",
    "              \n",
    "        #Checks which contract has outperformed the other since yesterday's close, volatility adjusted. If one contract\n",
    "        #has outperformed the other by \"x\" in the last \"period\" 5-min periods, that contract is bought and the other sold in a corresponding quantity, volatility adjusted.\n",
    "            if self.data[\"hour\"].iloc[bar]==entryhr and self.data[\"hour\"].iloc[bar-6]==entryhr:\n",
    "            \n",
    "                    if self.nqposition==0:#      \n",
    "                        \n",
    "                            if self.data[\"NQxperiodReturn\"].iloc[bar]-(self.data[\"YMxperiodReturn\"].iloc[bar]*self.data[\"YMmultiplier\"].iloc[bar])>x:          \n",
    "                                        cb=self.current_balance\n",
    "                                        self.sell_ym(bar, amount=cb*lev*self.data[\"YMmultiplier\"].iloc[bar])\n",
    "                                        self.ymposition=-1\n",
    "                                        self.buy_nq(bar, amount=cb*lev)\n",
    "                                        self.nqposition=1\n",
    "                                        self.nq=1\n",
    "                                         \n",
    "                            elif (self.data[\"YMxperiodReturn\"].iloc[bar]*self.data[\"YMmultiplier\"].iloc[bar])-self.data[\"NQxperiodReturn\"].iloc[bar]>x:\n",
    "                              \n",
    "                                        cb=self.current_balance\n",
    "        \n",
    "                                        self.buy_ym(bar, amount=cb*lev*self.data[\"YMmultiplier\"].iloc[bar])\n",
    "                                        self.ymposition=1\n",
    "                                        self.sell_nq(bar, amount=cb*lev)\n",
    "                                        self.nqposition=-1\n",
    "                                        self.nq=-1\n",
    "      #Stop loss check at \"checkhr\"                             \n",
    "            elif self.data[\"hour\"].iloc[bar]==checkhr and self.data[\"hour\"].iloc[bar-4]==checkhr:# and self.data[\"hour\"].iloc[bar-7]!=checkhr:\n",
    "                if self.nqposition==1:\n",
    "                    if self.data[\"NQyperiodReturn\"].iloc[bar]-(self.data[\"YMyperiodReturn\"].iloc[bar]*self.data[\"YMmultiplier\"].iloc[bar])<y:# and self.data[\"NQxperiodReturn\"].iloc[bar]-self.data[\"YMxperiodReturn\"].iloc[bar]<z:\n",
    "                                self.close_position(bar)\n",
    "                                self.nqposition=0\n",
    "                                self.ymposition=0\n",
    "                                self.esposition=0\n",
    "                                 \n",
    "                                print(\"stopped\")\n",
    "                         \n",
    "                elif self.ymposition==1:\n",
    "                    if (self.data[\"YMyperiodReturn\"].iloc[bar]*self.data[\"YMmultiplier\"].iloc[bar])-self.data[\"NQyperiodReturn\"].iloc[bar]<y:# and self.data[\"YMxperiodReturn\"].iloc[bar]-self.data[\"NQxperiodReturn\"].iloc[bar]<z:\n",
    "                            self.close_position(bar)\n",
    "                            self.nqposition=0\n",
    "                            self.ymposition=0\n",
    "                            self.esposition=0\n",
    "\n",
    "                            print(\"stopped\")\n",
    "         \n",
    "                \n",
    "        self.close_pos(bar+1)\n",
    "        return self.data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97e7348d",
   "metadata": {},
   "source": [
    "## Creating an object of the class \"Momentum\", defining the date window of the backtest, beginning account value, and use of the bid-ask spread"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "d4168de6",
   "metadata": {},
   "outputs": [],
   "source": [
    "trade=Momentum(\"Futures\", \"2018-01-04\", \"2020-01-03\", 100000, use_spread=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91c56c1d",
   "metadata": {},
   "source": [
    "## Running the backtest with arguments passed for the momentum lookback period,  time to enter the trade, time to check trade performance and \"stop out\" if necessary, time to close the trade, relative momentum threshold necessary to open the trade, relative performance threshold necessary to \"stop out\" of the trade, and leverage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "ad8bc2b3",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "---------------------------------------------------------------------------\n",
      "Testing Intraday Momentum Strategy , periods:180, entry:9, checkhr:11, exit:9, leverage:4 \n",
      "---------------------------------------------------------------------------\n",
      "2018-01-15 09:30:00| Bot 19 YM @ 25143.0168\n",
      "2018-01-15 09:30:00| Sold 57 NQ @ 6911.9357184\n",
      "2018-01-15 23:00:00 | Net Asset Value = 99516.27\n",
      "2018-01-16 09:30:00| Sold 19 YM @ 25185.97732\n",
      "2018-01-16 09:30:00| Bot 56 NQ @ 6961.0647373\n",
      "2018-01-16 23:00:00 | Net Asset Value = 97823.21\n",
      "2018-01-17 09:30:00| Bot 19 YM @ 25087.01008\n",
      "2018-01-17 09:30:00| Sold 56 NQ @ 6902.185809075\n",
      "2018-01-17 23:00:00 | Net Asset Value = 98816.42\n",
      "2018-01-18 23:00:00 | Net Asset Value = 99113.42\n",
      "2018-01-19 09:35:00| Sold 18 YM @ 25198.97576\n",
      "2018-01-19 09:35:00| Bot 56 NQ @ 6989.56500235\n",
      "2018-01-21 23:00:00 | Net Asset Value = 98061.35\n",
      "2018-01-22 23:00:00 | Net Asset Value = 98781.35\n",
      "2018-01-23 09:35:00| Sold 16 YM @ 25369.95524\n",
      "2018-01-23 09:35:00| Bot 55 NQ @ 7080.56584865\n",
      "2018-01-23 23:00:00 | Net Asset Value = 99250.76\n",
      "2018-01-24 09:35:00| Bot 16 YM @ 25507.06048\n",
      "2018-01-24 09:35:00| Sold 55 NQ @ 7108.183893275\n",
      "2018-01-24 23:00:00 | Net Asset Value = 100454.66\n",
      "2018-01-25 09:55:00| Bot 18 YM @ 25481.05736\n",
      "2018-01-25 09:55:00| Sold 56 NQ @ 7059.934342\n",
      "2018-01-25 23:00:00 | Net Asset Value = 100350.7\n",
      "2018-01-28 23:00:00 | Net Asset Value = 100010.7\n",
      "2018-01-29 23:00:00 | Net Asset Value = 100010.7\n",
      "2018-01-30 09:30:00| Sold 18 YM @ 25404.95104\n",
      "2018-01-30 09:30:00| Bot 56 NQ @ 7074.315790525\n",
      "2018-01-30 23:00:00 | Net Asset Value = 102880.13\n",
      "2018-01-31 09:30:00| Bot 18 YM @ 25492.05868\n",
      "2018-01-31 09:30:00| Sold 56 NQ @ 7118.43379795\n",
      "2018-01-31 23:00:00 | Net Asset Value = 98851.37\n",
      "2018-02-01 09:30:00| Sold 19 YM @ 25194.97624\n",
      "2018-02-01 09:30:00| Bot 56 NQ @ 7068.0657324\n",
      "stopped\n",
      "2018-02-01 23:00:00 | Net Asset Value = 97640.24\n",
      "2018-02-02 09:35:00| Sold 18 YM @ 25088.98896\n",
      "2018-02-02 09:35:00| Bot 55 NQ @ 7015.815246475\n",
      "2018-02-04 23:00:00 | Net Asset Value = 100891.2\n",
      "2018-02-05 09:30:00| Bot 18 YM @ 24465.93556\n",
      "2018-02-05 09:30:00| Sold 58 NQ @ 6852.686269425\n",
      "stopped\n",
      "2018-02-05 23:00:00 | Net Asset Value = 99700.16\n",
      "2018-02-06 09:30:00| Sold 14 YM @ 23250.20964\n",
      "2018-02-06 09:30:00| Bot 60 NQ @ 6611.0614823\n",
      "stopped\n",
      "2018-02-06 23:00:00 | Net Asset Value = 97647.41\n",
      "2018-02-07 09:30:00| Bot 14 YM @ 24026.88288\n",
      "2018-02-07 09:30:00| Sold 57 NQ @ 6773.9370018\n",
      "2018-02-07 23:00:00 | Net Asset Value = 100537.71\n",
      "2018-02-08 09:30:00| Sold 14 YM @ 23946.12612\n",
      "2018-02-08 09:30:00| Bot 59 NQ @ 6722.0625146\n",
      "stopped\n",
      "2018-02-08 23:00:00 | Net Asset Value = 97585.78\n",
      "2018-02-09 09:30:00| Sold 14 YM @ 23283.20568\n",
      "2018-02-09 09:30:00| Bot 59 NQ @ 6535.0607755\n",
      "2018-02-11 23:00:00 | Net Asset Value = 96806.08\n",
      "2018-02-12 09:30:00| Sold 15 YM @ 23636.16332\n",
      "2018-02-12 09:30:00| Bot 59 NQ @ 6630.56166365\n",
      "2018-02-12 23:00:00 | Net Asset Value = 99209.64\n",
      "2018-02-13 23:00:00 | Net Asset Value = 98037.64\n",
      "2018-02-14 09:35:00| Sold 15 YM @ 23661.16032\n",
      "2018-02-14 09:35:00| Bot 58 NQ @ 6678.56211005\n",
      "2018-02-14 23:00:00 | Net Asset Value = 101382.44\n",
      "2018-02-15 09:30:00| Bot 16 YM @ 24235.90796\n",
      "2018-02-15 09:30:00| Sold 58 NQ @ 6851.186283375\n",
      "stopped\n",
      "2018-02-15 23:00:00 | Net Asset Value = 97393.22\n",
      "2018-02-18 23:00:00 | Net Asset Value = 97393.22\n",
      "2018-02-19 09:30:00| Sold 16 YM @ 24356.07692\n",
      "2018-02-19 09:30:00| Bot 56 NQ @ 6927.56442575\n",
      "2018-02-19 23:00:00 | Net Asset Value = 96890.84\n",
      "2018-02-20 09:40:00| Sold 16 YM @ 24287.0852\n",
      "2018-02-20 09:40:00| Bot 55 NQ @ 6910.56426765\n",
      "2018-02-20 23:00:00 | Net Asset Value = 100455.92\n",
      "2018-02-21 09:30:00| Sold 16 YM @ 24188.09708\n",
      "2018-02-21 09:30:00| Bot 58 NQ @ 6957.56470475\n",
      "2018-02-21 23:00:00 | Net Asset Value = 100838.72\n",
      "2018-02-22 09:45:00| Sold 16 YM @ 24097.108\n",
      "2018-02-22 09:45:00| Bot 58 NQ @ 6939.314535025\n",
      "stopped\n",
      "2018-02-22 23:00:00 | Net Asset Value = 99617.71\n",
      "2018-02-25 23:00:00 | Net Asset Value = 99617.71\n",
      "2018-02-26 23:00:00 | Net Asset Value = 99617.71\n",
      "2018-02-27 23:00:00 | Net Asset Value = 99617.71\n",
      "2018-02-28 23:00:00 | Net Asset Value = 99617.71\n",
      "2018-03-01 09:50:00| Bot 16 YM @ 24073.88852\n",
      "2018-03-01 09:50:00| Sold 57 NQ @ 6940.9354487\n",
      "2018-03-01 23:00:00 | Net Asset Value = 97168.31\n",
      "2018-03-02 09:50:00| Sold 16 YM @ 23422.189\n",
      "2018-03-02 09:50:00| Bot 57 NQ @ 6806.813302775\n",
      "2018-03-04 23:00:00 | Net Asset Value = 101331.23\n",
      "2018-03-05 09:40:00| Bot 17 YM @ 23651.83788\n",
      "2018-03-05 09:40:00| Sold 59 NQ @ 6912.43571375\n",
      "stopped\n",
      "2018-03-05 23:00:00 | Net Asset Value = 101418.94\n",
      "2018-03-06 09:30:00| Sold 16 YM @ 24158.10068\n",
      "2018-03-06 09:30:00| Bot 57 NQ @ 7057.315632425\n",
      "2018-03-06 23:00:00 | Net Asset Value = 103984.81\n",
      "2018-03-07 23:00:00 | Net Asset Value = 104281.31\n",
      "2018-03-08 23:00:00 | Net Asset Value = 104281.31\n",
      "2018-03-11 23:00:00 | Net Asset Value = 104281.31\n",
      "2018-03-12 09:35:00| Sold 16 YM @ 24594.04836\n",
      "2018-03-12 09:35:00| Bot 57 NQ @ 7269.817608675\n",
      "2018-03-12 23:00:00 | Net Asset Value = 106944.23\n",
      "2018-03-13 09:30:00| Sold 16 YM @ 24468.06348\n",
      "2018-03-13 09:30:00| Bot 59 NQ @ 7314.56802485\n",
      "stopped\n",
      "2018-03-13 23:00:00 | Net Asset Value = 105084.98\n",
      "2018-03-14 09:40:00| Sold 15 YM @ 24222.093\n",
      "2018-03-14 09:40:00| Bot 58 NQ @ 7200.06696\n",
      "2018-03-14 23:00:00 | Net Asset Value = 107344.49\n",
      "2018-03-15 09:30:00| Bot 15 YM @ 24014.88144\n",
      "2018-03-15 09:30:00| Sold 59 NQ @ 7170.43331435\n",
      "2018-03-15 23:00:00 | Net Asset Value = 107128.84\n",
      "2018-03-18 23:00:00 | Net Asset Value = 107014.84\n",
      "2018-03-19 09:30:00| Bot 16 YM @ 23996.87928\n",
      "2018-03-19 09:30:00| Sold 60 NQ @ 7063.43430945\n",
      "2018-03-19 23:00:00 | Net Asset Value = 108119.83\n",
      "2018-03-20 09:30:00| Bot 18 YM @ 23913.86932\n",
      "2018-03-20 09:30:00| Sold 62 NQ @ 7008.684818625\n",
      "2018-03-20 23:00:00 | Net Asset Value = 108018.14\n",
      "2018-03-21 09:35:00| Bot 19 YM @ 23913.86932\n",
      "2018-03-21 09:35:00| Sold 62 NQ @ 6994.9349465\n",
      "stopped\n",
      "2018-03-21 23:00:00 | Net Asset Value = 107458.09\n",
      "2018-03-22 23:00:00 | Net Asset Value = 107458.09\n",
      "2018-03-23 09:45:00| Bot 19 YM @ 23140.77656\n",
      "2018-03-23 09:45:00| Sold 63 NQ @ 6775.9369832\n",
      "2018-03-25 23:00:00 | Net Asset Value = 106657.61\n",
      "2018-03-26 09:30:00| Sold 19 YM @ 23118.22548\n",
      "2018-03-26 09:30:00| Bot 63 NQ @ 6781.0630633\n",
      "stopped\n",
      "2018-03-26 23:00:00 | Net Asset Value = 104562.67\n",
      "2018-03-27 09:45:00| Sold 19 YM @ 23321.20112\n",
      "2018-03-27 09:45:00| Bot 60 NQ @ 6888.0640584\n",
      "stopped\n",
      "2018-03-27 23:00:00 | Net Asset Value = 101108.65\n",
      "2018-03-28 09:30:00| Bot 20 YM @ 23100.77176\n",
      "2018-03-28 09:30:00| Sold 60 NQ @ 6630.9383317\n",
      "2018-03-28 23:00:00 | Net Asset Value = 101459.52\n",
      "2018-03-29 09:30:00| Bot 21 YM @ 23172.7804\n",
      "2018-03-29 09:30:00| Sold 61 NQ @ 6612.688501425\n",
      "2018-04-01 23:00:00 | Net Asset Value = 100300.88\n",
      "2018-04-02 09:40:00| Bot 21 YM @ 23256.79048\n",
      "2018-04-02 09:40:00| Sold 60 NQ @ 6645.188199175\n",
      "stopped\n",
      "2018-04-02 23:00:00 | Net Asset Value = 99037.57\n",
      "2018-04-03 09:50:00| Bot 21 YM @ 22900.74776\n",
      "2018-04-03 09:50:00| Sold 60 NQ @ 6540.43917335\n",
      "2018-04-03 23:00:00 | Net Asset Value = 101835.22\n",
      "2018-04-04 09:30:00| Sold 22 YM @ 22732.2718\n",
      "2018-04-04 09:30:00| Bot 60 NQ @ 6496.310415125\n",
      "2018-04-04 23:00:00 | Net Asset Value = 95359.57\n",
      "2018-04-05 09:35:00| Bot 21 YM @ 23539.82444\n",
      "2018-04-05 09:35:00| Sold 57 NQ @ 6720.9374947\n",
      "2018-04-05 23:00:00 | Net Asset Value = 97029.69\n",
      "2018-04-06 09:30:00| Sold 21 YM @ 23422.189\n",
      "2018-04-06 09:30:00| Bot 58 NQ @ 6667.312005425\n",
      "2018-04-08 23:00:00 | Net Asset Value = 98842.57\n",
      "2018-04-09 09:45:00| Sold 21 YM @ 23207.2148\n",
      "2018-04-09 09:45:00| Bot 58 NQ @ 6627.311633425\n",
      "2018-04-09 23:00:00 | Net Asset Value = 96687.0\n",
      "2018-04-10 09:30:00| Bot 20 YM @ 23462.8152\n",
      "2018-04-10 09:30:00| Sold 57 NQ @ 6685.43782485\n",
      "2018-04-10 23:00:00 | Net Asset Value = 94128.4\n",
      "2018-04-11 09:30:00| Sold 19 YM @ 23341.19872\n",
      "2018-04-11 09:30:00| Bot 55 NQ @ 6714.812447175\n",
      "2018-04-11 23:00:00 | Net Asset Value = 92404.25\n",
      "2018-04-12 09:30:00| Bot 18 YM @ 23536.82408\n",
      "2018-04-12 09:30:00| Sold 53 NQ @ 6746.687255225\n",
      "2018-04-12 23:00:00 | Net Asset Value = 90509.84\n",
      "2018-04-15 23:00:00 | Net Asset Value = 91864.34\n",
      "2018-04-16 09:40:00| Bot 17 YM @ 23651.83788\n",
      "2018-04-16 09:40:00| Sold 54 NQ @ 6774.9369925\n",
      "2018-04-16 23:00:00 | Net Asset Value = 91012.69\n",
      "2018-04-17 09:30:00| Bot 17 YM @ 23947.8734\n",
      "2018-04-17 09:30:00| Sold 53 NQ @ 6855.686241525\n",
      "stopped\n",
      "2018-04-17 23:00:00 | Net Asset Value = 89396.21\n",
      "2018-04-18 09:40:00| Bot 16 YM @ 23937.8722\n",
      "2018-04-18 09:40:00| Sold 51 NQ @ 6929.935551\n",
      "stopped\n",
      "2018-04-18 23:00:00 | Net Asset Value = 87831.97\n",
      "2018-04-19 09:40:00| Bot 16 YM @ 23792.8548\n",
      "2018-04-19 09:40:00| Sold 50 NQ @ 6903.43579745\n",
      "2018-04-19 23:00:00 | Net Asset Value = 88622.08\n",
      "2018-04-20 09:30:00| Bot 17 YM @ 23763.85132\n",
      "2018-04-20 09:30:00| Sold 52 NQ @ 6853.686260125\n",
      "2018-04-22 23:00:00 | Net Asset Value = 90156.3\n",
      "2018-04-23 23:00:00 | Net Asset Value = 89472.3\n",
      "2018-04-24 09:50:00| Bot 18 YM @ 23623.83452\n",
      "2018-04-24 09:50:00| Sold 52 NQ @ 6764.187092475\n",
      "2018-04-24 23:00:00 | Net Asset Value = 87688.0\n",
      "2018-04-25 23:00:00 | Net Asset Value = 88255.0\n",
      "2018-04-26 09:40:00| Sold 19 YM @ 23269.20736\n",
      "2018-04-26 09:40:00| Bot 52 NQ @ 6716.312461125\n",
      "stopped\n",
      "2018-04-26 23:00:00 | Net Asset Value = 87375.7\n",
      "2018-04-27 09:30:00| Bot 19 YM @ 23457.8146\n",
      "2018-04-27 09:30:00| Sold 51 NQ @ 6842.43636475\n",
      "2018-04-29 23:00:00 | Net Asset Value = 90042.22\n",
      "2018-04-30 09:30:00| Bot 21 YM @ 23561.82708\n",
      "2018-04-30 09:30:00| Sold 54 NQ @ 6782.686920425\n",
      "2018-04-30 23:00:00 | Net Asset Value = 89742.95\n",
      "2018-05-01 09:30:00| Sold 20 YM @ 23152.2214\n",
      "2018-05-01 09:30:00| Bot 52 NQ @ 6712.0624216\n",
      "2018-05-01 23:00:00 | Net Asset Value = 93032.63\n",
      "2018-05-02 23:00:00 | Net Asset Value = 93137.63\n",
      "2018-05-03 09:30:00| Sold 21 YM @ 22874.25476\n",
      "2018-05-03 09:30:00| Bot 55 NQ @ 6712.56242625\n",
      "2018-05-03 23:00:00 | Net Asset Value = 92269.8\n",
      "2018-05-04 09:30:00| Sold 21 YM @ 22908.25068\n",
      "2018-05-04 09:30:00| Bot 55 NQ @ 6735.812642475\n",
      "stopped\n",
      "2018-05-06 23:00:00 | Net Asset Value = 91210.12\n",
      "2018-05-07 23:00:00 | Net Asset Value = 91210.12\n",
      "2018-05-08 09:50:00| Bot 18 YM @ 23387.8062\n",
      "2018-05-08 09:50:00| Sold 52 NQ @ 6895.185874175\n",
      "2018-05-08 23:00:00 | Net Asset Value = 90713.27\n",
      "2018-05-09 09:30:00| Bot 17 YM @ 23561.82708\n",
      "2018-05-09 09:30:00| Sold 52 NQ @ 6947.43538825\n",
      "stopped\n",
      "2018-05-09 23:00:00 | Net Asset Value = 90626.85\n",
      "2018-05-10 23:00:00 | Net Asset Value = 90626.85\n",
      "2018-05-11 09:30:00| Bot 16 YM @ 23922.8704\n",
      "2018-05-11 09:30:00| Sold 51 NQ @ 7066.43428155\n",
      "2018-05-13 23:00:00 | Net Asset Value = 91550.82\n",
      "2018-05-14 23:00:00 | Net Asset Value = 91787.57\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2018-05-15 09:30:00| Bot 16 YM @ 23873.86452\n",
      "2018-05-15 09:30:00| Sold 52 NQ @ 7003.184869775\n",
      "2018-05-15 23:00:00 | Net Asset Value = 91208.35\n",
      "2018-05-16 23:00:00 | Net Asset Value = 90795.35\n",
      "2018-05-17 23:00:00 | Net Asset Value = 90795.35\n",
      "2018-05-18 09:30:00| Bot 16 YM @ 23865.86356\n",
      "2018-05-18 09:30:00| Sold 51 NQ @ 6987.185018575\n",
      "2018-05-20 23:00:00 | Net Asset Value = 91672.22\n",
      "2018-05-21 23:00:00 | Net Asset Value = 92058.22\n",
      "2018-05-22 09:30:00| Sold 17 YM @ 24205.09504\n",
      "2018-05-22 09:30:00| Bot 52 NQ @ 7055.815618475\n",
      "2018-05-22 23:00:00 | Net Asset Value = 92976.43\n",
      "2018-05-23 23:00:00 | Net Asset Value = 93038.43\n",
      "2018-05-24 09:30:00| Sold 18 YM @ 23976.12252\n",
      "2018-05-24 09:30:00| Bot 52 NQ @ 7070.065751\n",
      "2018-05-24 23:00:00 | Net Asset Value = 93439.21\n",
      "2018-05-25 09:35:00| Sold 18 YM @ 23910.13044\n",
      "2018-05-25 09:35:00| Bot 53 NQ @ 7066.815720775\n",
      "2018-05-27 23:00:00 | Net Asset Value = 95165.33\n",
      "2018-05-28 09:30:00| Sold 18 YM @ 23865.13584\n",
      "2018-05-28 09:30:00| Bot 53 NQ @ 7082.315864925\n",
      "2018-05-28 23:00:00 | Net Asset Value = 95064.03\n",
      "2018-05-29 09:35:00| Sold 18 YM @ 23685.15744\n",
      "2018-05-29 09:35:00| Bot 54 NQ @ 7036.0654348\n",
      "2018-05-29 23:00:00 | Net Asset Value = 99326.08\n",
      "2018-05-30 09:30:00| Bot 19 YM @ 23682.8416\n",
      "2018-05-30 09:30:00| Sold 55 NQ @ 7068.184265275\n",
      "2018-05-30 23:00:00 | Net Asset Value = 99095.98\n",
      "2018-05-31 09:30:00| Sold 18 YM @ 23724.15276\n",
      "2018-05-31 09:30:00| Bot 55 NQ @ 7093.315967225\n",
      "2018-05-31 23:00:00 | Net Asset Value = 100313.1\n",
      "2018-06-01 09:30:00| Bot 18 YM @ 23779.85324\n",
      "2018-06-01 09:30:00| Sold 55 NQ @ 7128.183707275\n",
      "stopped\n",
      "2018-06-03 23:00:00 | Net Asset Value = 96093.34\n",
      "2018-06-04 09:30:00| Bot 17 YM @ 23976.87688\n",
      "2018-06-04 09:30:00| Sold 53 NQ @ 7225.43280285\n",
      "2018-06-04 23:00:00 | Net Asset Value = 94180.87\n",
      "2018-06-05 09:40:00| Sold 16 YM @ 23958.12468\n",
      "2018-06-05 09:40:00| Bot 51 NQ @ 7274.817655175\n",
      "2018-06-05 23:00:00 | Net Asset Value = 93549.92\n",
      "2018-06-06 09:30:00| Bot 15 YM @ 24073.88852\n",
      "2018-06-06 09:30:00| Sold 50 NQ @ 7291.43218905\n",
      "2018-06-06 23:00:00 | Net Asset Value = 93887.2\n",
      "2018-06-07 09:30:00| Bot 16 YM @ 24386.92608\n",
      "2018-06-07 09:30:00| Sold 51 NQ @ 7306.682047225\n",
      "2018-06-07 23:00:00 | Net Asset Value = 98239.92\n",
      "2018-06-08 09:30:00| Bot 17 YM @ 24360.92296\n",
      "2018-06-08 09:30:00| Sold 54 NQ @ 7225.182805175\n",
      "2018-06-10 23:00:00 | Net Asset Value = 99131.85\n",
      "2018-06-11 09:55:00| Sold 18 YM @ 24464.06396\n",
      "2018-06-11 09:55:00| Bot 54 NQ @ 7275.0676575\n",
      "2018-06-11 23:00:00 | Net Asset Value = 99083.35\n",
      "2018-06-12 09:30:00| Sold 18 YM @ 24513.05808\n",
      "2018-06-12 09:30:00| Bot 54 NQ @ 7300.817896975\n",
      "2018-06-12 23:00:00 | Net Asset Value = 101416.23\n",
      "2018-06-13 23:00:00 | Net Asset Value = 101623.23\n",
      "2018-06-14 09:30:00| Sold 20 YM @ 24436.06732\n",
      "2018-06-14 09:30:00| Bot 55 NQ @ 7364.0684852\n",
      "2018-06-14 23:00:00 | Net Asset Value = 105569.56\n",
      "2018-06-15 09:30:00| Sold 21 YM @ 24162.1002\n",
      "2018-06-15 09:30:00| Bot 57 NQ @ 7355.56840615\n",
      "2018-06-17 23:00:00 | Net Asset Value = 105194.51\n",
      "2018-06-18 09:30:00| Sold 20 YM @ 24001.11952\n",
      "2018-06-18 09:30:00| Bot 58 NQ @ 7301.0678993\n",
      "2018-06-18 23:00:00 | Net Asset Value = 106920.96\n",
      "2018-06-19 09:30:00| Sold 20 YM @ 23842.1386\n",
      "2018-06-19 09:30:00| Bot 59 NQ @ 7289.817794675\n",
      "2018-06-19 23:00:00 | Net Asset Value = 110176.23\n",
      "2018-06-20 09:30:00| Sold 20 YM @ 23903.13128\n",
      "2018-06-20 09:30:00| Bot 60 NQ @ 7378.56862005\n",
      "2018-06-20 23:00:00 | Net Asset Value = 114560.49\n",
      "2018-06-21 09:30:00| Sold 21 YM @ 23723.15288\n",
      "2018-06-21 09:30:00| Bot 62 NQ @ 7406.318878125\n",
      "2018-06-21 23:00:00 | Net Asset Value = 111946.93\n",
      "2018-06-22 09:30:00| Bot 21 YM @ 23750.84976\n",
      "2018-06-22 09:30:00| Sold 60 NQ @ 7334.43178915\n",
      "2018-06-24 23:00:00 | Net Asset Value = 112604.5\n",
      "2018-06-25 09:35:00| Bot 22 YM @ 23548.82552\n",
      "2018-06-25 09:35:00| Sold 62 NQ @ 7212.182926075\n",
      "2018-06-25 23:00:00 | Net Asset Value = 114765.18\n",
      "2018-06-26 09:40:00| Sold 22 YM @ 23436.18732\n",
      "2018-06-26 09:40:00| Bot 63 NQ @ 7190.816873975\n",
      "2018-06-26 23:00:00 | Net Asset Value = 113560.58\n",
      "2018-06-27 23:00:00 | Net Asset Value = 113385.58\n",
      "2018-06-28 09:30:00| Sold 23 YM @ 23227.2124\n",
      "2018-06-28 09:30:00| Bot 64 NQ @ 7080.065844\n",
      "2018-06-28 23:00:00 | Net Asset Value = 113658.25\n",
      "2018-06-29 09:35:00| Bot 23 YM @ 23551.82588\n",
      "2018-06-29 09:35:00| Sold 63 NQ @ 7179.933226\n",
      "2018-07-01 23:00:00 | Net Asset Value = 111036.05\n",
      "2018-07-02 09:40:00| Sold 22 YM @ 23204.21516\n",
      "2018-07-02 09:40:00| Bot 62 NQ @ 7099.316023025\n",
      "2018-07-02 23:00:00 | Net Asset Value = 113373.69\n",
      "2018-07-03 09:30:00| Bot 22 YM @ 23548.82552\n",
      "2018-07-03 09:30:00| Sold 62 NQ @ 7213.43291445\n",
      "2018-07-03 23:00:00 | Net Asset Value = 113660.37\n",
      "2018-07-04 23:00:00 | Net Asset Value = 113278.37\n",
      "2018-07-05 09:35:00| Sold 22 YM @ 23429.18816\n",
      "2018-07-05 09:35:00| Bot 63 NQ @ 7180.816780975\n",
      "2018-07-05 23:00:00 | Net Asset Value = 113871.3\n",
      "2018-07-06 09:30:00| Sold 21 YM @ 23436.18732\n",
      "2018-07-06 09:30:00| Bot 63 NQ @ 7218.0671274\n",
      "2018-07-08 23:00:00 | Net Asset Value = 117603.76\n",
      "2018-07-09 09:50:00| Bot 21 YM @ 23772.8524\n",
      "2018-07-09 09:50:00| Sold 64 NQ @ 7342.9317101\n",
      "2018-07-09 23:00:00 | Net Asset Value = 118169.74\n",
      "2018-07-10 09:30:00| Bot 20 YM @ 24011.88108\n",
      "2018-07-10 09:30:00| Sold 64 NQ @ 7381.681349725\n",
      "2018-07-10 23:00:00 | Net Asset Value = 120501.72\n",
      "2018-07-11 23:00:00 | Net Asset Value = 119629.72\n",
      "2018-07-12 09:55:00| Sold 21 YM @ 23991.12072\n",
      "2018-07-12 09:55:00| Bot 64 NQ @ 7403.56885255\n",
      "2018-07-12 23:00:00 | Net Asset Value = 122774.85\n",
      "2018-07-15 23:00:00 | Net Asset Value = 122572.85\n",
      "2018-07-16 23:00:00 | Net Asset Value = 122572.85\n",
      "2018-07-17 09:40:00| Sold 22 YM @ 24129.10416\n",
      "2018-07-17 09:40:00| Bot 66 NQ @ 7417.0689781\n",
      "2018-07-17 23:00:00 | Net Asset Value = 125832.09\n",
      "2018-07-18 09:50:00| Bot 24 YM @ 24272.9124\n",
      "2018-07-18 09:50:00| Sold 66 NQ @ 7485.680382525\n",
      "2018-07-18 23:00:00 | Net Asset Value = 125902.1\n",
      "2018-07-19 09:35:00| Sold 24 YM @ 24269.08736\n",
      "2018-07-19 09:35:00| Bot 67 NQ @ 7486.819626775\n",
      "2018-07-19 23:00:00 | Net Asset Value = 127836.53\n",
      "2018-07-20 09:30:00| Sold 26 YM @ 24123.10488\n",
      "2018-07-20 09:30:00| Bot 68 NQ @ 7467.819450075\n",
      "stopped\n",
      "2018-07-22 23:00:00 | Net Asset Value = 126441.28\n",
      "2018-07-23 09:35:00| Bot 27 YM @ 24164.89944\n",
      "2018-07-23 09:35:00| Sold 68 NQ @ 7408.43110095\n",
      "stopped\n",
      "2018-07-23 23:00:00 | Net Asset Value = 124331.31\n",
      "2018-07-24 23:00:00 | Net Asset Value = 124331.31\n",
      "2018-07-25 09:30:00| Sold 28 YM @ 24295.08424\n",
      "2018-07-25 09:30:00| Bot 66 NQ @ 7517.56991275\n",
      "2018-07-25 23:00:00 | Net Asset Value = 114544.56\n",
      "2018-07-26 09:35:00| Bot 27 YM @ 24667.9598\n",
      "2018-07-26 09:35:00| Sold 61 NQ @ 7512.680131425\n",
      "2018-07-26 23:00:00 | Net Asset Value = 114642.88\n",
      "2018-07-27 09:35:00| Bot 27 YM @ 24684.96184\n",
      "2018-07-27 09:35:00| Sold 60 NQ @ 7512.180136075\n",
      "2018-07-29 23:00:00 | Net Asset Value = 117855.22\n",
      "2018-07-30 09:30:00| Bot 30 YM @ 24570.94816\n",
      "2018-07-30 09:30:00| Sold 64 NQ @ 7367.681479925\n",
      "2018-07-30 23:00:00 | Net Asset Value = 119466.39\n",
      "2018-07-31 09:35:00| Sold 33 YM @ 24518.05748\n",
      "2018-07-31 09:35:00| Bot 65 NQ @ 7349.56835035\n",
      "stopped\n",
      "2018-07-31 23:00:00 | Net Asset Value = 117305.09\n",
      "2018-08-01 09:40:00| Sold 33 YM @ 24543.05448\n",
      "2018-08-01 09:40:00| Bot 63 NQ @ 7365.818501475\n",
      "stopped\n",
      "2018-08-01 23:00:00 | Net Asset Value = 117403.83\n",
      "2018-08-02 09:30:00| Sold 32 YM @ 24264.08796\n",
      "2018-08-02 09:30:00| Bot 64 NQ @ 7329.318162025\n",
      "2018-08-02 23:00:00 | Net Asset Value = 120874.28\n",
      "2018-08-03 09:40:00| Bot 33 YM @ 24480.93736\n",
      "2018-08-03 09:40:00| Sold 64 NQ @ 7465.43057085\n",
      "2018-08-05 23:00:00 | Net Asset Value = 123381.9\n",
      "2018-08-06 09:30:00| Sold 32 YM @ 24510.05844\n",
      "2018-08-06 09:30:00| Bot 65 NQ @ 7488.56964305\n",
      "2018-08-06 23:00:00 | Net Asset Value = 121453.5\n",
      "2018-08-07 09:35:00| Bot 30 YM @ 24729.96724\n",
      "2018-08-07 09:35:00| Sold 63 NQ @ 7566.42963155\n",
      "2018-08-07 23:00:00 | Net Asset Value = 120979.8\n",
      "2018-08-08 09:45:00| Sold 30 YM @ 24704.03516\n",
      "2018-08-08 09:45:00| Bot 63 NQ @ 7556.320273125\n",
      "2018-08-08 23:00:00 | Net Asset Value = 120953.17\n",
      "2018-08-09 09:30:00| Bot 28 YM @ 24727.967\n",
      "2018-08-09 09:30:00| Sold 64 NQ @ 7558.179708275\n",
      "stopped\n",
      "2018-08-09 23:00:00 | Net Asset Value = 119345.1\n",
      "2018-08-10 09:30:00| Sold 26 YM @ 24477.0624\n",
      "2018-08-10 09:30:00| Bot 63 NQ @ 7519.56993135\n",
      "2018-08-12 23:00:00 | Net Asset Value = 120369.31\n",
      "2018-08-13 09:35:00| Sold 24 YM @ 24452.0654\n",
      "2018-08-13 09:35:00| Bot 63 NQ @ 7527.320003425\n",
      "2018-08-13 23:00:00 | Net Asset Value = 120061.97\n",
      "2018-08-14 23:00:00 | Net Asset Value = 120169.22\n",
      "2018-08-15 09:50:00| Sold 23 YM @ 24198.09588\n",
      "2018-08-15 09:50:00| Bot 64 NQ @ 7469.819468675\n",
      "stopped\n",
      "2018-08-15 23:00:00 | Net Asset Value = 117447.98\n",
      "2018-08-16 09:30:00| Bot 22 YM @ 24596.95128\n",
      "2018-08-16 09:30:00| Sold 62 NQ @ 7504.9302035\n",
      "2018-08-16 23:00:00 | Net Asset Value = 123622.73\n",
      "2018-08-19 23:00:00 | Net Asset Value = 122664.23\n",
      "2018-08-20 09:35:00| Bot 23 YM @ 24911.98908\n",
      "2018-08-20 09:35:00| Sold 65 NQ @ 7483.680401125\n",
      "2018-08-20 23:00:00 | Net Asset Value = 123499.46\n",
      "2018-08-21 23:00:00 | Net Asset Value = 123291.46\n",
      "2018-08-22 23:00:00 | Net Asset Value = 123291.46\n",
      "2018-08-23 09:30:00| Sold 26 YM @ 24824.02076\n",
      "2018-08-23 09:30:00| Bot 65 NQ @ 7526.319994125\n",
      "2018-08-23 23:00:00 | Net Asset Value = 122640.7\n",
      "2018-08-26 23:00:00 | Net Asset Value = 122260.45\n",
      "2018-08-27 09:30:00| Bot 26 YM @ 25101.01176\n",
      "2018-08-27 09:30:00| Sold 64 NQ @ 7620.679127025\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2018-08-27 23:00:00 | Net Asset Value = 123501.6\n",
      "2018-08-28 23:00:00 | Net Asset Value = 123569.6\n",
      "2018-08-29 09:30:00| Sold 25 YM @ 25207.97468\n",
      "2018-08-29 09:30:00| Bot 64 NQ @ 7682.0714426\n",
      "2018-08-29 23:00:00 | Net Asset Value = 126372.4\n",
      "2018-08-30 09:30:00| Sold 25 YM @ 25212.97408\n",
      "2018-08-30 09:30:00| Bot 65 NQ @ 7743.322012225\n",
      "2018-08-30 23:00:00 | Net Asset Value = 128085.07\n",
      "2018-08-31 09:30:00| Sold 25 YM @ 25106.9868\n",
      "2018-08-31 09:30:00| Bot 66 NQ @ 7742.822007575\n",
      "2018-09-02 23:00:00 | Net Asset Value = 128332.49\n",
      "2018-09-03 23:00:00 | Net Asset Value = 127240.99\n",
      "2018-09-04 23:00:00 | Net Asset Value = 127240.99\n",
      "2018-09-05 09:35:00| Bot 25 YM @ 25101.01176\n",
      "2018-09-05 09:35:00| Sold 66 NQ @ 7687.9285016\n",
      "2018-09-05 23:00:00 | Net Asset Value = 132983.97\n",
      "2018-09-06 09:30:00| Bot 28 YM @ 25178.021\n",
      "2018-09-06 09:30:00| Sold 70 NQ @ 7612.179206075\n",
      "2018-09-06 23:00:00 | Net Asset Value = 138306.43\n",
      "2018-09-07 09:45:00| Sold 31 YM @ 25079.99004\n",
      "2018-09-07 09:45:00| Bot 73 NQ @ 7526.819998775\n",
      "2018-09-09 23:00:00 | Net Asset Value = 137640.76\n",
      "2018-09-10 09:30:00| Bot 31 YM @ 25175.02064\n",
      "2018-09-10 09:30:00| Sold 72 NQ @ 7538.679889625\n",
      "stopped\n",
      "2018-09-10 23:00:00 | Net Asset Value = 135350.82\n",
      "2018-09-11 09:35:00| Sold 31 YM @ 24934.00756\n",
      "2018-09-11 09:35:00| Bot 72 NQ @ 7517.56991275\n",
      "stopped\n",
      "2018-09-11 23:00:00 | Net Asset Value = 133767.02\n",
      "2018-09-12 09:35:00| Bot 31 YM @ 25154.01812\n",
      "2018-09-12 09:35:00| Sold 70 NQ @ 7577.179531575\n",
      "2018-09-12 23:00:00 | Net Asset Value = 134735.03\n",
      "2018-09-13 09:45:00| Sold 32 YM @ 25308.96256\n",
      "2018-09-13 09:45:00| Bot 70 NQ @ 7661.0712473\n",
      "2018-09-13 23:00:00 | Net Asset Value = 134189.84\n",
      "2018-09-14 09:30:00| Bot 31 YM @ 25346.04116\n",
      "2018-09-14 09:30:00| Sold 69 NQ @ 7651.178843375\n",
      "2018-09-16 23:00:00 | Net Asset Value = 133648.91\n",
      "2018-09-17 09:35:00| Bot 31 YM @ 25291.03456\n",
      "2018-09-17 09:35:00| Sold 70 NQ @ 7587.179438575\n",
      "2018-09-17 23:00:00 | Net Asset Value = 136757.65\n",
      "2018-09-18 09:30:00| Sold 32 YM @ 25292.96448\n",
      "2018-09-18 09:30:00| Bot 72 NQ @ 7569.820398675\n",
      "2018-09-18 23:00:00 | Net Asset Value = 133803.94\n",
      "2018-09-19 09:30:00| Bot 30 YM @ 25514.06132\n",
      "2018-09-19 09:30:00| Sold 70 NQ @ 7594.42937115\n",
      "2018-09-19 23:00:00 | Net Asset Value = 137080.16\n",
      "2018-09-20 09:30:00| Bot 31 YM @ 25796.09516\n",
      "2018-09-20 09:30:00| Sold 72 NQ @ 7612.179206075\n",
      "2018-09-20 23:00:00 | Net Asset Value = 136212.11\n",
      "2018-09-21 09:35:00| Sold 30 YM @ 25880.89392\n",
      "2018-09-21 09:35:00| Bot 71 NQ @ 7690.57152165\n",
      "stopped\n",
      "2018-09-23 23:00:00 | Net Asset Value = 134057.35\n",
      "2018-09-24 09:30:00| Bot 29 YM @ 25820.09804\n",
      "2018-09-24 09:30:00| Sold 71 NQ @ 7540.42987335\n",
      "stopped\n",
      "2018-09-24 23:00:00 | Net Asset Value = 126634.78\n",
      "2018-09-25 09:30:00| Bot 29 YM @ 25764.09132\n",
      "2018-09-25 09:30:00| Sold 66 NQ @ 7620.179131675\n",
      "stopped\n",
      "2018-09-25 23:00:00 | Net Asset Value = 124157.45\n",
      "2018-09-26 09:30:00| Sold 29 YM @ 25653.92116\n",
      "2018-09-26 09:30:00| Bot 64 NQ @ 7671.321342625\n",
      "2018-09-26 23:00:00 | Net Asset Value = 126512.6\n",
      "2018-09-27 09:30:00| Sold 29 YM @ 25536.9352\n",
      "2018-09-27 09:30:00| Bot 66 NQ @ 7686.0714798\n",
      "2018-09-27 23:00:00 | Net Asset Value = 126667.01\n",
      "2018-09-28 09:30:00| Sold 28 YM @ 25536.9352\n",
      "2018-09-28 09:30:00| Bot 66 NQ @ 7701.57162395\n",
      "stopped\n",
      "2018-09-30 23:00:00 | Net Asset Value = 126416.96\n",
      "2018-10-01 09:30:00| Bot 27 YM @ 25781.09336\n",
      "2018-10-01 09:30:00| Sold 65 NQ @ 7767.177764575\n",
      "2018-10-01 23:00:00 | Net Asset Value = 129183.75\n",
      "2018-10-02 09:35:00| Bot 27 YM @ 25790.09444\n",
      "2018-10-02 09:35:00| Sold 67 NQ @ 7703.42835745\n",
      "2018-10-02 23:00:00 | Net Asset Value = 132759.15\n",
      "2018-10-03 23:00:00 | Net Asset Value = 133106.9\n",
      "2018-10-04 09:35:00| Bot 26 YM @ 25916.10956\n",
      "2018-10-04 09:35:00| Sold 69 NQ @ 7655.678801525\n",
      "2018-10-04 23:00:00 | Net Asset Value = 135870.39\n",
      "2018-10-05 09:30:00| Bot 27 YM @ 25794.09492\n",
      "2018-10-05 09:30:00| Sold 71 NQ @ 7555.679731525\n",
      "2018-10-07 23:00:00 | Net Asset Value = 135377.83\n",
      "2018-10-08 23:00:00 | Net Asset Value = 134762.58\n",
      "2018-10-09 09:30:00| Sold 30 YM @ 25593.92836\n",
      "2018-10-09 09:30:00| Bot 72 NQ @ 7453.56931755\n",
      "2018-10-09 23:00:00 | Net Asset Value = 134989.44\n",
      "2018-10-10 09:35:00| Bot 29 YM @ 25472.05628\n",
      "2018-10-10 09:35:00| Sold 72 NQ @ 7365.681498525\n",
      "stopped\n",
      "2018-10-10 23:00:00 | Net Asset Value = 130452.88\n",
      "2018-10-11 09:30:00| Sold 29 YM @ 24618.04548\n",
      "2018-10-11 09:30:00| Bot 73 NQ @ 7109.816120675\n",
      "2018-10-11 23:00:00 | Net Asset Value = 137279.12\n",
      "2018-10-12 09:30:00| Sold 31 YM @ 24487.0612\n",
      "2018-10-12 09:30:00| Bot 77 NQ @ 7193.0668949\n",
      "2018-10-14 23:00:00 | Net Asset Value = 143801.37\n",
      "2018-10-15 09:30:00| Bot 31 YM @ 24401.92788\n",
      "2018-10-15 09:30:00| Sold 80 NQ @ 7181.183214375\n",
      "2018-10-15 23:00:00 | Net Asset Value = 144086.76\n",
      "2018-10-16 23:00:00 | Net Asset Value = 146399.76\n",
      "2018-10-17 09:35:00| Bot 31 YM @ 24738.96832\n",
      "2018-10-17 09:35:00| Sold 79 NQ @ 7324.181884475\n",
      "2018-10-17 23:00:00 | Net Asset Value = 146459.11\n",
      "2018-10-18 23:00:00 | Net Asset Value = 145941.61\n",
      "2018-10-19 09:35:00| Sold 30 YM @ 24631.04392\n",
      "2018-10-19 09:35:00| Bot 80 NQ @ 7272.317631925\n",
      "stopped\n",
      "2018-10-21 23:00:00 | Net Asset Value = 144107.52\n",
      "2018-10-22 09:30:00| Sold 30 YM @ 24647.042\n",
      "2018-10-22 09:30:00| Bot 79 NQ @ 7236.56729945\n",
      "2018-10-22 23:00:00 | Net Asset Value = 150067.21\n",
      "2018-10-23 23:00:00 | Net Asset Value = 150565.96\n",
      "2018-10-24 09:30:00| Bot 31 YM @ 24368.92392\n",
      "2018-10-24 09:30:00| Sold 84 NQ @ 7168.183335275\n",
      "2018-10-24 23:00:00 | Net Asset Value = 152781.72\n",
      "2018-10-25 09:30:00| Sold 32 YM @ 23798.14388\n",
      "2018-10-25 09:30:00| Bot 87 NQ @ 6958.56471405\n",
      "2018-10-25 23:00:00 | Net Asset Value = 147002.45\n",
      "2018-10-26 09:30:00| Bot 31 YM @ 23798.85552\n",
      "2018-10-26 09:30:00| Sold 81 NQ @ 6873.686074125\n",
      "stopped\n",
      "2018-10-28 23:00:00 | Net Asset Value = 135264.25\n",
      "2018-10-29 09:30:00| Bot 30 YM @ 24001.87988\n",
      "2018-10-29 09:30:00| Sold 77 NQ @ 6994.184953475\n",
      "2018-10-29 23:00:00 | Net Asset Value = 138352.09\n",
      "2018-10-30 09:30:00| Bot 32 YM @ 23574.82864\n",
      "2018-10-30 09:30:00| Sold 82 NQ @ 6771.187027375\n",
      "2018-10-30 23:00:00 | Net Asset Value = 143713.16\n",
      "2018-10-31 09:30:00| Sold 33 YM @ 24191.09672\n",
      "2018-10-31 09:30:00| Bot 81 NQ @ 6999.0650907\n",
      "2018-10-31 23:00:00 | Net Asset Value = 143581.08\n",
      "2018-11-01 09:30:00| Bot 33 YM @ 24337.9202\n",
      "2018-11-01 09:30:00| Sold 80 NQ @ 7055.184386175\n",
      "2018-11-01 23:00:00 | Net Asset Value = 142746.96\n",
      "2018-11-02 09:30:00| Bot 35 YM @ 24617.9538\n",
      "2018-11-02 09:30:00| Sold 83 NQ @ 7108.683888625\n",
      "2018-11-04 23:00:00 | Net Asset Value = 143021.34\n",
      "2018-11-05 09:30:00| Bot 35 YM @ 24442.9328\n",
      "2018-11-05 09:30:00| Sold 83 NQ @ 7003.43486745\n",
      "2018-11-05 23:00:00 | Net Asset Value = 151598.79\n",
      "2018-11-06 09:30:00| Sold 36 YM @ 24567.0516\n",
      "2018-11-06 09:30:00| Bot 85 NQ @ 7043.0654999\n",
      "stopped\n",
      "2018-11-06 23:00:00 | Net Asset Value = 146864.58\n",
      "2018-11-07 09:50:00| Sold 34 YM @ 24875.01464\n",
      "2018-11-07 09:50:00| Bot 82 NQ @ 7142.316422925\n",
      "2018-11-07 23:00:00 | Net Asset Value = 142333.13\n",
      "2018-11-08 09:30:00| Bot 33 YM @ 25262.03108\n",
      "2018-11-08 09:30:00| Sold 78 NQ @ 7222.682828425\n",
      "2018-11-08 23:00:00 | Net Asset Value = 144830.87\n",
      "2018-11-09 09:30:00| Bot 33 YM @ 25218.0258\n",
      "2018-11-09 09:30:00| Sold 81 NQ @ 7158.183428275\n",
      "2018-11-11 23:00:00 | Net Asset Value = 145354.12\n",
      "2018-11-12 09:30:00| Bot 34 YM @ 24991.99868\n",
      "2018-11-12 09:30:00| Sold 84 NQ @ 7016.43474655\n",
      "stopped\n",
      "2018-11-12 23:00:00 | Net Asset Value = 146215.44\n",
      "2018-11-13 09:30:00| Sold 33 YM @ 24536.05532\n",
      "2018-11-13 09:30:00| Bot 83 NQ @ 6964.56476985\n",
      "2018-11-13 23:00:00 | Net Asset Value = 143972.14\n",
      "2018-11-14 09:35:00| Sold 33 YM @ 24539.05496\n",
      "2018-11-14 09:35:00| Bot 83 NQ @ 6954.814679175\n",
      "2018-11-14 23:00:00 | Net Asset Value = 147149.33\n",
      "2018-11-15 09:30:00| Sold 34 YM @ 24078.11028\n",
      "2018-11-15 09:30:00| Bot 86 NQ @ 6829.813516675\n",
      "2018-11-15 23:00:00 | Net Asset Value = 146280.12\n",
      "2018-11-16 09:35:00| Bot 32 YM @ 24277.913\n",
      "2018-11-16 09:35:00| Sold 84 NQ @ 6868.43612295\n",
      "2018-11-18 23:00:00 | Net Asset Value = 147824.54\n",
      "2018-11-19 09:30:00| Bot 33 YM @ 24456.93448\n",
      "2018-11-19 09:30:00| Sold 87 NQ @ 6886.43595555\n",
      "2018-11-19 23:00:00 | Net Asset Value = 153461.38\n",
      "2018-11-20 09:30:00| Sold 35 YM @ 23713.15408\n",
      "2018-11-20 09:30:00| Bot 94 NQ @ 6577.311168425\n",
      "2018-11-20 23:00:00 | Net Asset Value = 161735.02\n",
      "2018-11-21 09:30:00| Sold 39 YM @ 23705.15504\n",
      "2018-11-21 09:30:00| Bot 98 NQ @ 6688.812205375\n",
      "2018-11-21 23:00:00 | Net Asset Value = 163542.97\n",
      "2018-11-22 23:00:00 | Net Asset Value = 164330.97\n",
      "2018-11-23 09:30:00| Sold 40 YM @ 23450.18564\n",
      "2018-11-23 09:30:00| Bot 99 NQ @ 6625.0616125\n",
      "2018-11-25 23:00:00 | Net Asset Value = 162808.3\n",
      "2018-11-26 09:30:00| Bot 39 YM @ 23661.83908\n",
      "2018-11-26 09:30:00| Sold 98 NQ @ 6678.43788995\n",
      "2018-11-26 23:00:00 | Net Asset Value = 161797.74\n",
      "2018-11-27 09:30:00| Sold 38 YM @ 23655.16104\n",
      "2018-11-27 09:30:00| Bot 95 NQ @ 6718.812484375\n",
      "2018-11-27 23:00:00 | Net Asset Value = 156934.17\n",
      "2018-11-28 09:30:00| Bot 36 YM @ 24033.88372\n",
      "2018-11-28 09:30:00| Sold 90 NQ @ 6807.686687925\n",
      "2018-11-28 23:00:00 | Net Asset Value = 155892.91\n",
      "2018-11-29 09:30:00| Bot 36 YM @ 24448.93352\n",
      "2018-11-29 09:30:00| Sold 90 NQ @ 6947.43538825\n",
      "2018-11-29 23:00:00 | Net Asset Value = 157923.49\n",
      "2018-12-02 23:00:00 | Net Asset Value = 155038.99\n",
      "2018-12-03 23:00:00 | Net Asset Value = 155038.99\n",
      "2018-12-04 09:40:00| Sold 31 YM @ 24822.021\n",
      "2018-12-04 09:40:00| Bot 87 NQ @ 7089.0659277\n",
      "2018-12-04 23:00:00 | Net Asset Value = 156159.4\n",
      "2018-12-05 23:00:00 | Net Asset Value = 155905.65\n",
      "2018-12-06 09:35:00| Sold 31 YM @ 23807.1428\n",
      "2018-12-06 09:35:00| Bot 91 NQ @ 6779.313047025\n",
      "2018-12-06 23:00:00 | Net Asset Value = 159653.84\n",
      "2018-12-07 09:30:00| Bot 31 YM @ 24107.8926\n",
      "2018-12-07 09:30:00| Sold 90 NQ @ 6876.9360439\n",
      "2018-12-09 23:00:00 | Net Asset Value = 155397.41\n",
      "2018-12-10 09:35:00| Sold 31 YM @ 23509.17856\n",
      "2018-12-10 09:35:00| Bot 93 NQ @ 6701.812326275\n",
      "2018-12-10 23:00:00 | Net Asset Value = 158366.4\n",
      "2018-12-11 09:30:00| Bot 31 YM @ 23902.868\n",
      "2018-12-11 09:30:00| Sold 91 NQ @ 6834.9364345\n",
      "stopped\n",
      "2018-12-11 23:00:00 | Net Asset Value = 151808.96\n",
      "2018-12-12 09:50:00| Sold 30 YM @ 23732.1518\n",
      "2018-12-12 09:50:00| Bot 88 NQ @ 6852.56372825\n",
      "2018-12-12 23:00:00 | Net Asset Value = 151399.91\n",
      "2018-12-13 09:35:00| Sold 30 YM @ 23773.14688\n",
      "2018-12-13 09:35:00| Bot 88 NQ @ 6876.313949125\n",
      "stopped\n",
      "2018-12-13 23:00:00 | Net Asset Value = 150440.68\n",
      "2018-12-14 09:40:00| Bot 29 YM @ 23538.82432\n",
      "2018-12-14 09:40:00| Sold 89 NQ @ 6730.43740635\n",
      "stopped\n",
      "2018-12-16 23:00:00 | Net Asset Value = 144393.46\n",
      "2018-12-17 09:30:00| Sold 29 YM @ 23059.23256\n",
      "2018-12-17 09:30:00| Bot 87 NQ @ 6620.061566\n",
      "2018-12-17 23:00:00 | Net Asset Value = 143749.6\n",
      "2018-12-18 09:35:00| Bot 28 YM @ 22950.75376\n",
      "2018-12-18 09:35:00| Sold 87 NQ @ 6544.43913615\n",
      "2018-12-18 23:00:00 | Net Asset Value = 139261.2\n",
      "2018-12-19 09:40:00| Sold 28 YM @ 22863.25608\n",
      "2018-12-19 09:40:00| Bot 85 NQ @ 6572.311121925\n",
      "stopped\n",
      "2018-12-19 23:00:00 | Net Asset Value = 138479.17\n",
      "2018-12-20 09:30:00| Sold 29 YM @ 22343.31848\n",
      "2018-12-20 09:30:00| Bot 86 NQ @ 6409.309606025\n",
      "2018-12-20 23:00:00 | Net Asset Value = 139511.78\n",
      "2018-12-21 09:40:00| Bot 30 YM @ 22094.65104\n",
      "2018-12-21 09:40:00| Sold 88 NQ @ 6319.44122865\n",
      "2018-12-23 23:00:00 | Net Asset Value = 143983.58\n",
      "2018-12-24 09:30:00| Sold 32 YM @ 21422.429\n",
      "2018-12-24 09:30:00| Bot 93 NQ @ 6093.806671875\n",
      "2018-12-25 23:00:00 | Net Asset Value = 146706.04\n",
      "2018-12-26 09:30:00| Sold 33 YM @ 21094.46836\n",
      "2018-12-26 09:30:00| Bot 96 NQ @ 6052.306285925\n",
      "2018-12-26 23:00:00 | Net Asset Value = 141016.84\n",
      "2018-12-27 09:30:00| Sold 31 YM @ 21668.39948\n",
      "2018-12-27 09:30:00| Bot 93 NQ @ 6228.807927375\n",
      "stopped\n",
      "2018-12-27 23:00:00 | Net Asset Value = 142056.33\n",
      "2018-12-28 09:30:00| Bot 29 YM @ 22306.67648\n",
      "2018-12-28 09:30:00| Sold 89 NQ @ 6338.44105195\n",
      "2018-12-30 23:00:00 | Net Asset Value = 138745.97\n",
      "2018-12-31 09:45:00| Bot 28 YM @ 22379.68524\n",
      "2018-12-31 09:45:00| Sold 86 NQ @ 6386.190607875\n",
      "2019-01-01 23:00:00 | Net Asset Value = 139668.93\n",
      "2019-01-02 23:00:00 | Net Asset Value = 140632.43\n",
      "2019-01-03 09:30:00| Sold 29 YM @ 22137.3432\n",
      "2019-01-03 09:30:00| Bot 88 NQ @ 6326.55883645\n",
      "2019-01-03 23:00:00 | Net Asset Value = 140232.2\n",
      "2019-01-06 23:00:00 | Net Asset Value = 139269.2\n",
      "2019-01-07 09:30:00| Sold 27 YM @ 22520.29724\n",
      "2019-01-07 09:30:00| Bot 85 NQ @ 6479.810261675\n",
      "2019-01-07 23:00:00 | Net Asset Value = 140309.85\n",
      "2019-01-08 09:40:00| Bot 27 YM @ 22942.7528\n",
      "2019-01-08 09:40:00| Sold 84 NQ @ 6611.43851305\n",
      "2019-01-08 23:00:00 | Net Asset Value = 138335.36\n",
      "2019-01-09 09:30:00| Bot 27 YM @ 23001.75988\n",
      "2019-01-09 09:30:00| Sold 84 NQ @ 6619.938434\n",
      "stopped\n",
      "2019-01-09 23:00:00 | Net Asset Value = 138093.68\n",
      "2019-01-10 09:40:00| Bot 27 YM @ 22833.73972\n",
      "2019-01-10 09:40:00| Sold 83 NQ @ 6580.188803675\n",
      "2019-01-10 23:00:00 | Net Asset Value = 138306.37\n",
      "2019-01-13 23:00:00 | Net Asset Value = 137860.37\n",
      "2019-01-14 09:30:00| Bot 26 YM @ 22861.74308\n",
      "2019-01-14 09:30:00| Sold 84 NQ @ 6560.9389827\n",
      "2019-01-14 23:00:00 | Net Asset Value = 139326.93\n",
      "2019-01-15 09:30:00| Sold 26 YM @ 22971.24312\n",
      "2019-01-15 09:30:00| Bot 82 NQ @ 6630.061659\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2019-01-15 23:00:00 | Net Asset Value = 139344.19\n",
      "2019-01-16 09:35:00| Bot 26 YM @ 23246.78928\n",
      "2019-01-16 09:35:00| Sold 81 NQ @ 6736.43735055\n",
      "2019-01-16 23:00:00 | Net Asset Value = 140717.1\n",
      "2019-01-17 09:45:00| Sold 27 YM @ 23222.213\n",
      "2019-01-17 09:45:00| Bot 83 NQ @ 6701.56232395\n",
      "2019-01-17 23:00:00 | Net Asset Value = 138169.18\n",
      "2019-01-18 09:35:00| Bot 26 YM @ 23605.83236\n",
      "2019-01-18 09:35:00| Sold 80 NQ @ 6792.43682975\n",
      "stopped\n",
      "2019-01-20 23:00:00 | Net Asset Value = 135822.23\n",
      "2019-01-21 23:00:00 | Net Asset Value = 135822.23\n",
      "2019-01-22 09:45:00| Bot 25 YM @ 23639.83644\n",
      "2019-01-22 09:45:00| Sold 80 NQ @ 6757.687152925\n",
      "2019-01-22 23:00:00 | Net Asset Value = 138076.29\n",
      "2019-01-23 09:30:00| Bot 26 YM @ 23738.84832\n",
      "2019-01-23 09:30:00| Sold 83 NQ @ 6735.43735985\n",
      "2019-01-23 23:00:00 | Net Asset Value = 140026.79\n",
      "2019-01-24 09:30:00| Sold 26 YM @ 23615.16584\n",
      "2019-01-24 09:30:00| Bot 82 NQ @ 6723.812530875\n",
      "2019-01-24 23:00:00 | Net Asset Value = 139536.72\n",
      "2019-01-27 23:00:00 | Net Asset Value = 138640.22\n",
      "2019-01-28 23:00:00 | Net Asset Value = 138640.22\n",
      "2019-01-29 09:30:00| Bot 26 YM @ 23644.83704\n",
      "2019-01-29 09:30:00| Sold 82 NQ @ 6739.43732265\n",
      "2019-01-29 23:00:00 | Net Asset Value = 142286.82\n",
      "2019-01-30 09:30:00| Bot 28 YM @ 23911.86908\n",
      "2019-01-30 09:30:00| Sold 85 NQ @ 6757.187157575\n",
      "2019-01-30 23:00:00 | Net Asset Value = 137827.39\n",
      "2019-01-31 09:30:00| Sold 26 YM @ 23936.12732\n",
      "2019-01-31 09:30:00| Bot 79 NQ @ 6879.0639747\n",
      "2019-01-31 23:00:00 | Net Asset Value = 134644.4\n",
      "2019-02-01 09:55:00| Bot 26 YM @ 24112.8932\n",
      "2019-02-01 09:55:00| Sold 77 NQ @ 6910.43573235\n",
      "2019-02-03 23:00:00 | Net Asset Value = 132824.48\n",
      "2019-02-04 09:30:00| Sold 26 YM @ 24085.10944\n",
      "2019-02-04 09:30:00| Bot 76 NQ @ 6922.814381575\n",
      "2019-02-04 23:00:00 | Net Asset Value = 131453.18\n",
      "2019-02-05 09:30:00| Sold 26 YM @ 24400.07164\n",
      "2019-02-05 09:30:00| Bot 74 NQ @ 7028.0653604\n",
      "2019-02-05 23:00:00 | Net Asset Value = 131500.71\n",
      "2019-02-06 09:45:00| Sold 26 YM @ 24419.06936\n",
      "2019-02-06 09:45:00| Bot 75 NQ @ 7065.0657045\n",
      "stopped\n",
      "2019-02-06 23:00:00 | Net Asset Value = 130312.83\n",
      "2019-02-07 09:35:00| Bot 27 YM @ 24289.91444\n",
      "2019-02-07 09:35:00| Sold 74 NQ @ 6952.185344075\n",
      "stopped\n",
      "2019-02-07 23:00:00 | Net Asset Value = 128598.36\n",
      "2019-02-10 23:00:00 | Net Asset Value = 128598.36\n",
      "2019-02-11 23:00:00 | Net Asset Value = 128598.36\n",
      "2019-02-12 09:30:00| Bot 27 YM @ 24337.9202\n",
      "2019-02-12 09:30:00| Sold 73 NQ @ 6996.43493255\n",
      "2019-02-12 23:00:00 | Net Asset Value = 129669.01\n",
      "2019-02-13 09:40:00| Bot 26 YM @ 24700.96376\n",
      "2019-02-13 09:40:00| Sold 73 NQ @ 7090.9340537\n",
      "2019-02-13 23:00:00 | Net Asset Value = 130228.64\n",
      "2019-02-14 09:30:00| Sold 26 YM @ 24480.06204\n",
      "2019-02-14 09:30:00| Bot 73 NQ @ 7023.56531855\n",
      "2019-02-14 23:00:00 | Net Asset Value = 130277.73\n",
      "2019-02-15 09:30:00| Bot 25 YM @ 24770.97216\n",
      "2019-02-15 09:30:00| Sold 72 NQ @ 7097.683990925\n",
      "2019-02-17 23:00:00 | Net Asset Value = 135184.43\n",
      "2019-02-18 23:00:00 | Net Asset Value = 135136.43\n",
      "2019-02-19 23:00:00 | Net Asset Value = 135136.43\n",
      "2019-02-20 09:50:00| Sold 24 YM @ 25011.9982\n",
      "2019-02-20 09:50:00| Bot 75 NQ @ 7125.0662625\n",
      "2019-02-20 23:00:00 | Net Asset Value = 132220.66\n",
      "2019-02-21 09:55:00| Bot 24 YM @ 24977.997\n",
      "2019-02-21 09:55:00| Sold 74 NQ @ 7056.184376875\n",
      "stopped\n",
      "2019-02-21 23:00:00 | Net Asset Value = 130370.88\n",
      "2019-02-24 23:00:00 | Net Asset Value = 130370.88\n",
      "2019-02-25 23:00:00 | Net Asset Value = 130370.88\n",
      "2019-02-26 09:30:00| Sold 24 YM @ 25085.98932\n",
      "2019-02-26 09:30:00| Bot 73 NQ @ 7129.56630435\n",
      "2019-02-26 23:00:00 | Net Asset Value = 130642.03\n",
      "2019-02-27 23:00:00 | Net Asset Value = 130148.78\n",
      "2019-02-28 23:00:00 | Net Asset Value = 130148.78\n",
      "2019-03-01 09:30:00| Bot 23 YM @ 25233.0276\n",
      "2019-03-01 09:30:00| Sold 72 NQ @ 7184.43318415\n",
      "stopped\n",
      "2019-03-03 23:00:00 | Net Asset Value = 128552.34\n",
      "2019-03-04 09:40:00| Sold 23 YM @ 25234.97144\n",
      "2019-03-04 09:40:00| Bot 70 NQ @ 7243.817366875\n",
      "2019-03-04 23:00:00 | Net Asset Value = 131425.97\n",
      "2019-03-05 09:35:00| Sold 23 YM @ 24886.01332\n",
      "2019-03-05 09:35:00| Bot 73 NQ @ 7185.316822825\n",
      "2019-03-05 23:00:00 | Net Asset Value = 132220.64\n",
      "2019-03-06 23:00:00 | Net Asset Value = 132272.14\n",
      "2019-03-07 23:00:00 | Net Asset Value = 132272.14\n",
      "2019-03-08 09:35:00| Bot 24 YM @ 24408.92872\n",
      "2019-03-08 09:35:00| Sold 75 NQ @ 6992.184972075\n",
      "2019-03-10 23:00:00 | Net Asset Value = 129830.73\n",
      "2019-03-11 09:30:00| Sold 22 YM @ 24387.0732\n",
      "2019-03-11 09:30:00| Bot 70 NQ @ 7098.56601605\n",
      "2019-03-11 23:00:00 | Net Asset Value = 123615.72\n",
      "2019-03-12 09:30:00| Sold 22 YM @ 24698.03588\n",
      "2019-03-12 09:30:00| Bot 69 NQ @ 7204.56700185\n",
      "2019-03-12 23:00:00 | Net Asset Value = 129279.63\n",
      "2019-03-13 23:00:00 | Net Asset Value = 128952.13\n",
      "2019-03-14 09:35:00| Bot 21 YM @ 24838.98032\n",
      "2019-03-14 09:35:00| Sold 70 NQ @ 7283.682261125\n",
      "2019-03-14 23:00:00 | Net Asset Value = 129031.8\n",
      "2019-03-15 09:35:00| Sold 21 YM @ 24831.01992\n",
      "2019-03-15 09:35:00| Bot 70 NQ @ 7304.317929525\n",
      "2019-03-17 23:00:00 | Net Asset Value = 128554.97\n",
      "2019-03-18 09:30:00| Sold 20 YM @ 24917.0096\n",
      "2019-03-18 09:30:00| Bot 70 NQ @ 7355.318403825\n",
      "2019-03-18 23:00:00 | Net Asset Value = 127303.37\n",
      "2019-03-19 23:00:00 | Net Asset Value = 127330.87\n",
      "2019-03-20 09:30:00| Sold 20 YM @ 24915.00984\n",
      "2019-03-20 09:30:00| Bot 69 NQ @ 7379.818631675\n",
      "2019-03-20 23:00:00 | Net Asset Value = 132813.08\n",
      "2019-03-21 23:00:00 | Net Asset Value = 131592.33\n",
      "2019-03-22 09:35:00| Sold 21 YM @ 24961.00432\n",
      "2019-03-22 09:35:00| Bot 70 NQ @ 7517.0699081\n",
      "stopped\n",
      "2019-03-24 23:00:00 | Net Asset Value = 130142.03\n",
      "2019-03-25 09:30:00| Bot 22 YM @ 24623.95452\n",
      "2019-03-25 09:30:00| Sold 70 NQ @ 7338.681749625\n",
      "2019-03-25 23:00:00 | Net Asset Value = 129345.75\n",
      "2019-03-26 23:00:00 | Net Asset Value = 129654.75\n",
      "2019-03-27 09:30:00| Bot 23 YM @ 24835.97996\n",
      "2019-03-27 09:30:00| Sold 70 NQ @ 7398.181196275\n",
      "2019-03-27 23:00:00 | Net Asset Value = 131349.4\n",
      "2019-03-28 09:30:00| Bot 23 YM @ 24775.97276\n",
      "2019-03-28 09:30:00| Sold 71 NQ @ 7336.43177055\n",
      "2019-03-28 23:00:00 | Net Asset Value = 131372.43\n",
      "2019-03-31 23:00:00 | Net Asset Value = 131671.43\n",
      "2019-04-01 23:00:00 | Net Asset Value = 131671.43\n",
      "2019-04-02 09:30:00| Sold 23 YM @ 25251.9694\n",
      "2019-04-02 09:30:00| Bot 70 NQ @ 7504.819794175\n",
      "2019-04-02 23:00:00 | Net Asset Value = 134488.84\n",
      "2019-04-03 09:30:00| Sold 23 YM @ 25294.96424\n",
      "2019-04-03 09:30:00| Bot 70 NQ @ 7565.0703545\n",
      "2019-04-03 23:00:00 | Net Asset Value = 134643.59\n",
      "2019-04-04 23:00:00 | Net Asset Value = 134445.59\n",
      "2019-04-07 23:00:00 | Net Asset Value = 134445.59\n",
      "2019-04-08 23:00:00 | Net Asset Value = 134445.59\n",
      "2019-04-09 09:30:00| Sold 22 YM @ 25218.97336\n",
      "2019-04-09 09:30:00| Bot 70 NQ @ 7597.57065675\n",
      "2019-04-09 23:00:00 | Net Asset Value = 134124.06\n",
      "2019-04-10 09:40:00| Sold 22 YM @ 25249.96964\n",
      "2019-04-10 09:40:00| Bot 70 NQ @ 7619.0708567\n",
      "2019-04-10 23:00:00 | Net Asset Value = 136387.93\n",
      "2019-04-11 09:45:00| Bot 23 YM @ 25295.03504\n",
      "2019-04-11 09:45:00| Sold 71 NQ @ 7631.9290224\n",
      "2019-04-11 23:00:00 | Net Asset Value = 135326.59\n",
      "2019-04-12 09:30:00| Bot 23 YM @ 25446.05316\n",
      "2019-04-12 09:30:00| Sold 72 NQ @ 7648.42886895\n",
      "2019-04-14 23:00:00 | Net Asset Value = 138976.49\n",
      "2019-04-15 09:35:00| Sold 23 YM @ 25446.946\n",
      "2019-04-15 09:35:00| Bot 72 NQ @ 7661.321249625\n",
      "stopped\n",
      "2019-04-15 23:00:00 | Net Asset Value = 136510.12\n",
      "2019-04-16 09:35:00| Bot 22 YM @ 25586.06996\n",
      "2019-04-16 09:35:00| Sold 71 NQ @ 7677.9285946\n",
      "stopped\n",
      "2019-04-16 23:00:00 | Net Asset Value = 133966.76\n",
      "2019-04-17 09:30:00| Sold 21 YM @ 25513.93796\n",
      "2019-04-17 09:30:00| Bot 69 NQ @ 7730.57189365\n",
      "2019-04-17 23:00:00 | Net Asset Value = 131851.5\n",
      "2019-04-18 09:30:00| Bot 22 YM @ 25616.07356\n",
      "2019-04-18 09:30:00| Sold 68 NQ @ 7710.9282877\n",
      "2019-04-21 23:00:00 | Net Asset Value = 132364.75\n",
      "2019-04-22 23:00:00 | Net Asset Value = 132091.75\n",
      "2019-04-23 09:40:00| Sold 22 YM @ 25609.92644\n",
      "2019-04-23 09:40:00| Bot 67 NQ @ 7778.822342375\n",
      "2019-04-23 23:00:00 | Net Asset Value = 133595.54\n",
      "2019-04-24 23:00:00 | Net Asset Value = 133873.79\n",
      "2019-04-25 09:30:00| Sold 23 YM @ 25434.94744\n",
      "2019-04-25 09:30:00| Bot 68 NQ @ 7852.0730236\n",
      "2019-04-25 23:00:00 | Net Asset Value = 128957.61\n",
      "2019-04-26 09:40:00| Bot 24 YM @ 25498.0594\n",
      "2019-04-26 09:40:00| Sold 67 NQ @ 7789.927553\n",
      "2019-04-28 23:00:00 | Net Asset Value = 129339.34\n",
      "2019-04-29 23:00:00 | Net Asset Value = 129290.84\n",
      "2019-04-30 23:00:00 | Net Asset Value = 129290.84\n",
      "2019-05-01 23:00:00 | Net Asset Value = 129290.84\n",
      "2019-05-02 09:30:00| Sold 26 YM @ 25414.94984\n",
      "2019-05-02 09:30:00| Bot 66 NQ @ 7767.822240075\n",
      "2019-05-02 23:00:00 | Net Asset Value = 130154.26\n",
      "2019-05-05 23:00:00 | Net Asset Value = 129696.76\n",
      "2019-05-06 09:40:00| Sold 24 YM @ 25196.976\n",
      "2019-05-06 09:40:00| Bot 66 NQ @ 7749.57207035\n",
      "stopped\n",
      "2019-05-06 23:00:00 | Net Asset Value = 127958.93\n",
      "2019-05-07 23:00:00 | Net Asset Value = 127958.93\n",
      "2019-05-08 09:35:00| Bot 24 YM @ 24942.9928\n",
      "2019-05-08 09:35:00| Sold 67 NQ @ 7613.9291898\n",
      "2019-05-08 23:00:00 | Net Asset Value = 128822.61\n",
      "2019-05-09 23:00:00 | Net Asset Value = 128768.36\n",
      "2019-05-12 23:00:00 | Net Asset Value = 128768.36\n",
      "2019-05-13 09:50:00| Bot 25 YM @ 24497.9394\n",
      "2019-05-13 09:50:00| Sold 69 NQ @ 7390.9312637\n",
      "2019-05-13 23:00:00 | Net Asset Value = 129434.88\n",
      "2019-05-14 09:35:00| Sold 25 YM @ 24492.0606\n",
      "2019-05-14 09:35:00| Bot 69 NQ @ 7389.56872235\n",
      "stopped\n",
      "2019-05-14 23:00:00 | Net Asset Value = 127718.15\n",
      "2019-05-15 09:30:00| Sold 26 YM @ 24434.06756\n",
      "2019-05-15 09:30:00| Bot 69 NQ @ 7392.56875025\n",
      "2019-05-15 23:00:00 | Net Asset Value = 128630.67\n",
      "2019-05-16 09:30:00| Bot 26 YM @ 24835.97996\n",
      "2019-05-16 09:30:00| Sold 67 NQ @ 7535.679917525\n",
      "2019-05-16 23:00:00 | Net Asset Value = 125176.99\n",
      "2019-05-19 23:00:00 | Net Asset Value = 124620.74\n",
      "2019-05-20 09:30:00| Bot 26 YM @ 24702.964\n",
      "2019-05-20 09:30:00| Sold 67 NQ @ 7403.681145125\n",
      "2019-05-20 23:00:00 | Net Asset Value = 126578.32\n",
      "2019-05-21 09:30:00| Sold 27 YM @ 24892.0126\n",
      "2019-05-21 09:30:00| Bot 67 NQ @ 7465.0694245\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2019-05-21 23:00:00 | Net Asset Value = 124635.25\n",
      "2019-05-22 23:00:00 | Net Asset Value = 124177.75\n",
      "2019-05-23 09:30:00| Sold 27 YM @ 24556.05292\n",
      "2019-05-23 09:30:00| Bot 67 NQ @ 7343.56829455\n",
      "2019-05-23 23:00:00 | Net Asset Value = 122821.86\n",
      "2019-05-24 09:35:00| Bot 26 YM @ 24717.9658\n",
      "2019-05-24 09:35:00| Sold 66 NQ @ 7371.9314404\n",
      "2019-05-26 23:00:00 | Net Asset Value = 124922.97\n",
      "2019-05-27 23:00:00 | Net Asset Value = 124430.97\n",
      "2019-05-28 09:30:00| Sold 28 YM @ 24745.03024\n",
      "2019-05-28 09:30:00| Bot 67 NQ @ 7355.818408475\n",
      "2019-05-28 23:00:00 | Net Asset Value = 128104.74\n",
      "2019-05-29 09:35:00| Sold 29 YM @ 24217.0936\n",
      "2019-05-29 09:35:00| Bot 72 NQ @ 7221.817162275\n",
      "2019-05-29 23:00:00 | Net Asset Value = 132058.11\n",
      "2019-05-30 09:30:00| Sold 28 YM @ 24241.09072\n",
      "2019-05-30 09:30:00| Bot 72 NQ @ 7260.067518\n",
      "2019-05-30 23:00:00 | Net Asset Value = 131791.79\n",
      "2019-05-31 09:35:00| Sold 27 YM @ 23955.12504\n",
      "2019-05-31 09:35:00| Bot 73 NQ @ 7160.56659265\n",
      "2019-06-02 23:00:00 | Net Asset Value = 131984.31\n",
      "2019-06-03 09:30:00| Bot 26 YM @ 23957.8746\n",
      "2019-06-03 09:30:00| Sold 73 NQ @ 7136.183632875\n",
      "2019-06-03 23:00:00 | Net Asset Value = 140256.22\n",
      "2019-06-04 09:30:00| Bot 28 YM @ 24162.8992\n",
      "2019-06-04 09:30:00| Sold 79 NQ @ 7061.184330375\n",
      "stopped\n",
      "2019-06-04 23:00:00 | Net Asset Value = 138676.36\n",
      "2019-06-05 09:40:00| Bot 28 YM @ 24533.94372\n",
      "2019-06-05 09:40:00| Sold 76 NQ @ 7211.182935375\n",
      "2019-06-05 23:00:00 | Net Asset Value = 139743.84\n",
      "2019-06-06 23:00:00 | Net Asset Value = 139900.84\n",
      "2019-06-07 09:40:00| Sold 28 YM @ 24964.00396\n",
      "2019-06-07 09:40:00| Bot 76 NQ @ 7358.0684294\n",
      "2019-06-09 23:00:00 | Net Asset Value = 141358.75\n",
      "2019-06-10 09:30:00| Sold 28 YM @ 25236.9712\n",
      "2019-06-10 09:30:00| Bot 75 NQ @ 7506.819812775\n",
      "2019-06-10 23:00:00 | Net Asset Value = 144875.2\n",
      "2019-06-11 09:50:00| Sold 30 YM @ 25263.96796\n",
      "2019-06-11 09:50:00| Bot 76 NQ @ 7580.320496325\n",
      "2019-06-11 23:00:00 | Net Asset Value = 144868.64\n",
      "2019-06-12 09:30:00| Bot 31 YM @ 25117.01368\n",
      "2019-06-12 09:30:00| Sold 76 NQ @ 7490.180340675\n",
      "2019-06-12 23:00:00 | Net Asset Value = 144024.92\n",
      "2019-06-13 09:50:00| Sold 31 YM @ 25187.97708\n",
      "2019-06-13 09:50:00| Bot 76 NQ @ 7534.820073175\n",
      "2019-06-13 23:00:00 | Net Asset Value = 141902.88\n",
      "2019-06-16 23:00:00 | Net Asset Value = 140896.88\n",
      "2019-06-17 09:30:00| Sold 29 YM @ 25174.97864\n",
      "2019-06-17 09:30:00| Bot 75 NQ @ 7513.56987555\n",
      "2019-06-17 23:00:00 | Net Asset Value = 142209.02\n",
      "2019-06-18 23:00:00 | Net Asset Value = 143680.52\n",
      "2019-06-19 09:30:00| Bot 30 YM @ 25604.07212\n",
      "2019-06-19 09:30:00| Sold 75 NQ @ 7649.928855\n",
      "2019-06-19 23:00:00 | Net Asset Value = 139668.02\n",
      "2019-06-20 23:00:00 | Net Asset Value = 140916.77\n",
      "2019-06-21 09:35:00| Bot 28 YM @ 25844.10092\n",
      "2019-06-21 09:35:00| Sold 72 NQ @ 7725.9281482\n",
      "2019-06-23 23:00:00 | Net Asset Value = 138050.77\n",
      "2019-06-24 09:30:00| Bot 28 YM @ 25866.10356\n",
      "2019-06-24 09:30:00| Sold 71 NQ @ 7747.9279436\n",
      "2019-06-24 23:00:00 | Net Asset Value = 139258.51\n",
      "2019-06-25 23:00:00 | Net Asset Value = 139509.51\n",
      "2019-06-26 09:30:00| Sold 29 YM @ 25706.9148\n",
      "2019-06-26 09:30:00| Bot 72 NQ @ 7666.0712938\n",
      "2019-06-26 23:00:00 | Net Asset Value = 139895.9\n",
      "2019-06-27 09:30:00| Sold 29 YM @ 25635.92332\n",
      "2019-06-27 09:30:00| Bot 73 NQ @ 7673.821365875\n",
      "2019-06-27 23:00:00 | Net Asset Value = 139639.47\n",
      "2019-06-30 23:00:00 | Net Asset Value = 140232.47\n",
      "2019-07-01 09:30:00| Sold 29 YM @ 25915.88972\n",
      "2019-07-01 09:30:00| Bot 71 NQ @ 7810.57263765\n",
      "2019-07-01 23:00:00 | Net Asset Value = 140894.36\n",
      "2019-07-02 23:00:00 | Net Asset Value = 141796.86\n",
      "2019-07-03 09:30:00| Bot 28 YM @ 25912.10908\n",
      "2019-07-03 09:30:00| Sold 72 NQ @ 7816.42730655\n",
      "2019-07-03 23:00:00 | Net Asset Value = 141624.58\n",
      "2019-07-04 23:00:00 | Net Asset Value = 141502.58\n",
      "2019-07-05 09:30:00| Bot 29 YM @ 25926.11076\n",
      "2019-07-05 09:30:00| Sold 72 NQ @ 7810.9273577\n",
      "2019-07-07 23:00:00 | Net Asset Value = 141102.13\n",
      "2019-07-08 09:45:00| Bot 28 YM @ 25837.10008\n",
      "2019-07-08 09:45:00| Sold 72 NQ @ 7762.177811075\n",
      "2019-07-08 23:00:00 | Net Asset Value = 139926.13\n",
      "2019-07-09 09:30:00| Sold 28 YM @ 25772.90688\n",
      "2019-07-09 09:30:00| Bot 71 NQ @ 7764.822212175\n",
      "2019-07-09 23:00:00 | Net Asset Value = 141254.65\n",
      "2019-07-10 09:35:00| Sold 27 YM @ 25973.88276\n",
      "2019-07-10 09:35:00| Bot 71 NQ @ 7901.323481625\n",
      "2019-07-10 23:00:00 | Net Asset Value = 143273.77\n",
      "2019-07-11 09:35:00| Bot 28 YM @ 26041.12456\n",
      "2019-07-11 09:35:00| Sold 71 NQ @ 7922.676318425\n",
      "2019-07-11 23:00:00 | Net Asset Value = 147118.05\n",
      "2019-07-12 09:35:00| Bot 30 YM @ 26265.15144\n",
      "2019-07-12 09:35:00| Sold 74 NQ @ 7915.9263812\n",
      "2019-07-14 23:00:00 | Net Asset Value = 149977.31\n",
      "2019-07-15 23:00:00 | Net Asset Value = 148714.31\n",
      "2019-07-16 23:00:00 | Net Asset Value = 148714.31\n",
      "2019-07-17 09:35:00| Sold 30 YM @ 26376.8344\n",
      "2019-07-17 09:35:00| Bot 74 NQ @ 7936.57380945\n",
      "2019-07-17 23:00:00 | Net Asset Value = 145501.38\n",
      "2019-07-18 09:30:00| Sold 30 YM @ 26224.85264\n",
      "2019-07-18 09:30:00| Bot 74 NQ @ 7865.57314915\n",
      "2019-07-18 23:00:00 | Net Asset Value = 147761.04\n",
      "2019-07-21 23:00:00 | Net Asset Value = 148265.04\n",
      "2019-07-22 09:30:00| Sold 29 YM @ 26217.85348\n",
      "2019-07-22 09:30:00| Bot 75 NQ @ 7862.823123575\n",
      "2019-07-22 23:00:00 | Net Asset Value = 149898.56\n",
      "2019-07-23 09:40:00| Bot 29 YM @ 26346.16116\n",
      "2019-07-23 09:40:00| Sold 75 NQ @ 7925.176295175\n",
      "2019-07-23 23:00:00 | Net Asset Value = 150711.86\n",
      "2019-07-24 09:30:00| Sold 30 YM @ 26281.8458\n",
      "2019-07-24 09:30:00| Bot 75 NQ @ 7933.0737769\n",
      "2019-07-24 23:00:00 | Net Asset Value = 151894.7\n",
      "2019-07-25 23:00:00 | Net Asset Value = 151928.45\n",
      "2019-07-28 23:00:00 | Net Asset Value = 151928.45\n",
      "2019-07-29 09:30:00| Bot 32 YM @ 26268.1518\n",
      "2019-07-29 09:30:00| Sold 76 NQ @ 7986.9257209\n",
      "2019-07-29 23:00:00 | Net Asset Value = 152660.95\n",
      "2019-07-30 23:00:00 | Net Asset Value = 153892.95\n",
      "2019-07-31 09:30:00| Bot 33 YM @ 26301.15576\n",
      "2019-07-31 09:30:00| Sold 77 NQ @ 7951.676048725\n",
      "stopped\n",
      "2019-07-31 23:00:00 | Net Asset Value = 151442.86\n",
      "2019-08-01 09:30:00| Sold 35 YM @ 25928.88816\n",
      "2019-08-01 09:30:00| Bot 76 NQ @ 7889.57337235\n",
      "2019-08-01 23:00:00 | Net Asset Value = 154117.37\n",
      "2019-08-02 09:30:00| Bot 33 YM @ 25545.06504\n",
      "2019-08-02 09:30:00| Sold 78 NQ @ 7721.42819005\n",
      "2019-08-04 23:00:00 | Net Asset Value = 154852.12\n",
      "2019-08-05 23:00:00 | Net Asset Value = 155086.12\n",
      "2019-08-06 09:40:00| Bot 31 YM @ 24957.9946\n",
      "2019-08-06 09:40:00| Sold 82 NQ @ 7495.43029185\n",
      "2019-08-06 23:00:00 | Net Asset Value = 156313.57\n",
      "2019-08-07 09:30:00| Sold 30 YM @ 24637.0432\n",
      "2019-08-07 09:30:00| Bot 83 NQ @ 7407.0688851\n",
      "2019-08-07 23:00:00 | Net Asset Value = 154183.15\n",
      "2019-08-08 23:00:00 | Net Asset Value = 152557.15\n",
      "2019-08-09 09:50:00| Bot 29 YM @ 25338.0402\n",
      "2019-08-09 09:50:00| Sold 79 NQ @ 7651.178843375\n",
      "2019-08-11 23:00:00 | Net Asset Value = 152514.12\n",
      "2019-08-12 23:00:00 | Net Asset Value = 152515.87\n",
      "2019-08-13 09:35:00| Sold 29 YM @ 25035.99532\n",
      "2019-08-13 09:35:00| Bot 80 NQ @ 7604.0707172\n",
      "2019-08-13 23:00:00 | Net Asset Value = 152457.07\n",
      "2019-08-14 09:30:00| Sold 29 YM @ 24935.00744\n",
      "2019-08-14 09:30:00| Bot 81 NQ @ 7597.0706521\n",
      "2019-08-14 23:00:00 | Net Asset Value = 155553.82\n",
      "2019-08-15 23:00:00 | Net Asset Value = 154801.82\n",
      "2019-08-16 09:40:00| Sold 29 YM @ 24798.02388\n",
      "2019-08-16 09:40:00| Bot 82 NQ @ 7549.320208025\n",
      "2019-08-18 23:00:00 | Net Asset Value = 152626.75\n",
      "2019-08-19 09:30:00| Sold 28 YM @ 25249.96964\n",
      "2019-08-19 09:30:00| Bot 79 NQ @ 7710.071703\n",
      "2019-08-19 23:00:00 | Net Asset Value = 154187.49\n",
      "2019-08-20 23:00:00 | Net Asset Value = 154043.49\n",
      "2019-08-21 09:30:00| Bot 28 YM @ 25247.02928\n",
      "2019-08-21 09:30:00| Sold 79 NQ @ 7715.9282412\n",
      "2019-08-21 23:00:00 | Net Asset Value = 155027.0\n",
      "2019-08-22 09:30:00| Bot 28 YM @ 25387.04608\n",
      "2019-08-22 09:30:00| Sold 80 NQ @ 7738.42803195\n",
      "2019-08-22 23:00:00 | Net Asset Value = 155958.95\n",
      "2019-08-23 09:40:00| Bot 29 YM @ 25225.02664\n",
      "2019-08-23 09:40:00| Sold 82 NQ @ 7646.42888755\n",
      "2019-08-25 23:00:00 | Net Asset Value = 156946.35\n",
      "2019-08-26 09:30:00| Bot 30 YM @ 24968.99592\n",
      "2019-08-26 09:30:00| Sold 84 NQ @ 7531.679954725\n",
      "2019-08-26 23:00:00 | Net Asset Value = 156087.59\n",
      "2019-08-27 09:40:00| Sold 30 YM @ 25050.99352\n",
      "2019-08-27 09:40:00| Bot 82 NQ @ 7606.320738125\n",
      "2019-08-27 23:00:00 | Net Asset Value = 157584.59\n",
      "2019-08-28 09:50:00| Bot 31 YM @ 24839.98044\n",
      "2019-08-28 09:50:00| Sold 83 NQ @ 7527.179996575\n",
      "2019-08-28 23:00:00 | Net Asset Value = 162847.39\n",
      "2019-08-29 09:45:00| Sold 31 YM @ 25390.95272\n",
      "2019-08-29 09:45:00| Bot 84 NQ @ 7699.0716007\n",
      "stopped\n",
      "2019-08-29 23:00:00 | Net Asset Value = 160393.16\n",
      "2019-08-30 09:40:00| Bot 31 YM @ 25550.06564\n",
      "2019-08-30 09:40:00| Sold 83 NQ @ 7710.678290025\n",
      "2019-09-01 23:00:00 | Net Asset Value = 162735.17\n",
      "2019-09-02 09:30:00| Sold 31 YM @ 25364.95584\n",
      "2019-09-02 09:30:00| Bot 84 NQ @ 7632.820984575\n",
      "2019-09-02 23:00:00 | Net Asset Value = 161401.59\n",
      "2019-09-03 09:30:00| Sold 32 YM @ 25211.9742\n",
      "2019-09-03 09:30:00| Bot 85 NQ @ 7626.320924125\n",
      "2019-09-03 23:00:00 | Net Asset Value = 161907.98\n",
      "2019-09-04 23:00:00 | Net Asset Value = 160083.98\n",
      "2019-09-05 09:30:00| Bot 31 YM @ 25746.08916\n",
      "2019-09-05 09:30:00| Sold 82 NQ @ 7797.42748325\n",
      "2019-09-05 23:00:00 | Net Asset Value = 159069.27\n",
      "2019-09-06 09:30:00| Bot 31 YM @ 25835.09984\n",
      "2019-09-06 09:30:00| Sold 81 NQ @ 7833.177150775\n",
      "2019-09-08 23:00:00 | Net Asset Value = 160091.28\n",
      "2019-09-09 09:55:00| Bot 31 YM @ 25911.10896\n",
      "2019-09-09 09:55:00| Sold 81 NQ @ 7831.677164725\n",
      "2019-09-09 23:00:00 | Net Asset Value = 161030.75\n",
      "2019-09-10 09:30:00| Bot 32 YM @ 25868.1038\n",
      "2019-09-10 09:30:00| Sold 84 NQ @ 7758.42784595\n",
      "2019-09-10 23:00:00 | Net Asset Value = 164110.37\n",
      "2019-09-11 09:55:00| Sold 34 YM @ 26000.87952\n",
      "2019-09-11 09:55:00| Bot 83 NQ @ 7826.822788775\n",
      "2019-09-11 23:00:00 | Net Asset Value = 159511.98\n",
      "2019-09-12 09:30:00| Sold 33 YM @ 26281.8458\n",
      "2019-09-12 09:30:00| Bot 81 NQ @ 7931.323760625\n",
      "2019-09-12 23:00:00 | Net Asset Value = 158802.17\n",
      "2019-09-13 09:30:00| Bot 31 YM @ 26323.1584\n",
      "2019-09-13 09:30:00| Sold 79 NQ @ 7868.9268183\n",
      "2019-09-15 23:00:00 | Net Asset Value = 157206.72\n",
      "2019-09-16 09:40:00| Sold 32 YM @ 26209.85444\n",
      "2019-09-16 09:40:00| Bot 79 NQ @ 7839.0729027\n",
      "2019-09-16 23:00:00 | Net Asset Value = 156643.31\n",
      "2019-09-17 09:30:00| Sold 33 YM @ 26084.86944\n",
      "2019-09-17 09:30:00| Bot 81 NQ @ 7836.322877125\n",
      "2019-09-17 23:00:00 | Net Asset Value = 158016.6\n",
      "2019-09-18 23:00:00 | Net Asset Value = 157944.6\n",
      "2019-09-19 09:35:00| Sold 32 YM @ 26298.84376\n",
      "2019-09-19 09:35:00| Bot 79 NQ @ 7915.0736095\n",
      "2019-09-19 23:00:00 | Net Asset Value = 159451.53\n",
      "2019-09-22 23:00:00 | Net Asset Value = 158391.53\n",
      "2019-09-23 23:00:00 | Net Asset Value = 158391.53\n",
      "2019-09-24 23:00:00 | Net Asset Value = 158391.53\n",
      "2019-09-25 09:30:00| Bot 32 YM @ 25979.11712\n",
      "2019-09-25 09:30:00| Sold 82 NQ @ 7692.9284551\n",
      "2019-09-25 23:00:00 | Net Asset Value = 153804.92\n",
      "2019-09-26 09:30:00| Bot 32 YM @ 26038.1242\n",
      "2019-09-26 09:30:00| Sold 80 NQ @ 7747.677945925\n",
      "2019-09-26 23:00:00 | Net Asset Value = 153937.18\n",
      "2019-09-27 09:35:00| Bot 32 YM @ 26028.123\n",
      "2019-09-27 09:35:00| Sold 79 NQ @ 7746.42795755\n",
      "2019-09-29 23:00:00 | Net Asset Value = 156151.3\n",
      "2019-09-30 23:00:00 | Net Asset Value = 155626.8\n",
      "2019-10-01 09:30:00| Sold 33 YM @ 26053.87316\n",
      "2019-10-01 09:30:00| Bot 80 NQ @ 7777.57233075\n",
      "2019-10-01 23:00:00 | Net Asset Value = 159555.83\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2019-10-02 09:35:00| Sold 34 YM @ 25345.95812\n",
      "2019-10-02 09:35:00| Bot 85 NQ @ 7569.0703917\n",
      "2019-10-02 23:00:00 | Net Asset Value = 164455.67\n",
      "2019-10-03 09:30:00| Sold 35 YM @ 25127.98428\n",
      "2019-10-03 09:30:00| Bot 88 NQ @ 7538.320105725\n",
      "2019-10-03 23:00:00 | Net Asset Value = 168362.7\n",
      "2019-10-06 23:00:00 | Net Asset Value = 168721.7\n",
      "2019-10-07 23:00:00 | Net Asset Value = 168721.7\n",
      "2019-10-08 09:30:00| Sold 32 YM @ 25308.96256\n",
      "2019-10-08 09:30:00| Bot 88 NQ @ 7646.821114775\n",
      "2019-10-08 23:00:00 | Net Asset Value = 165258.25\n",
      "2019-10-09 23:00:00 | Net Asset Value = 165674.25\n",
      "2019-10-10 23:00:00 | Net Asset Value = 165674.25\n",
      "2019-10-13 23:00:00 | Net Asset Value = 165674.25\n",
      "2019-10-14 23:00:00 | Net Asset Value = 165674.25\n",
      "2019-10-15 23:00:00 | Net Asset Value = 165674.25\n",
      "2019-10-16 09:35:00| Bot 29 YM @ 26054.12612\n",
      "2019-10-16 09:35:00| Sold 84 NQ @ 7886.176657875\n",
      "2019-10-16 23:00:00 | Net Asset Value = 163022.43\n",
      "2019-10-17 23:00:00 | Net Asset Value = 163007.43\n",
      "2019-10-20 23:00:00 | Net Asset Value = 163007.43\n",
      "2019-10-21 09:30:00| Sold 28 YM @ 25833.89956\n",
      "2019-10-21 09:30:00| Bot 82 NQ @ 7871.0732003\n",
      "2019-10-21 23:00:00 | Net Asset Value = 164817.11\n",
      "2019-10-22 09:30:00| Sold 29 YM @ 25904.89104\n",
      "2019-10-22 09:30:00| Bot 83 NQ @ 7942.0738606\n",
      "stopped\n",
      "2019-10-22 23:00:00 | Net Asset Value = 162208.57\n",
      "2019-10-23 23:00:00 | Net Asset Value = 162208.57\n",
      "2019-10-24 09:30:00| Sold 30 YM @ 25915.88972\n",
      "2019-10-24 09:30:00| Bot 82 NQ @ 7911.323574625\n",
      "2019-10-24 23:00:00 | Net Asset Value = 162588.23\n",
      "2019-10-25 09:55:00| Sold 31 YM @ 25892.89248\n",
      "2019-10-25 09:55:00| Bot 82 NQ @ 7923.0736839\n",
      "2019-10-27 23:00:00 | Net Asset Value = 166014.86\n",
      "2019-10-28 09:35:00| Bot 31 YM @ 26178.141\n",
      "2019-10-28 09:35:00| Sold 81 NQ @ 8048.175151275\n",
      "stopped\n",
      "2019-10-28 23:00:00 | Net Asset Value = 161938.92\n",
      "2019-10-29 23:00:00 | Net Asset Value = 161938.92\n",
      "2019-10-30 09:30:00| Sold 32 YM @ 26086.8692\n",
      "2019-10-30 09:30:00| Bot 80 NQ @ 8012.57451625\n",
      "2019-10-30 23:00:00 | Net Asset Value = 162164.77\n",
      "2019-10-31 09:35:00| Sold 32 YM @ 26161.8602\n",
      "2019-10-31 09:35:00| Bot 80 NQ @ 8067.825030075\n",
      "2019-10-31 23:00:00 | Net Asset Value = 164822.3\n",
      "2019-11-01 09:30:00| Bot 31 YM @ 26221.14616\n",
      "2019-11-01 09:30:00| Sold 80 NQ @ 8079.924856\n",
      "2019-11-03 23:00:00 | Net Asset Value = 163460.76\n",
      "2019-11-04 23:00:00 | Net Asset Value = 163863.76\n",
      "2019-11-05 09:35:00| Bot 31 YM @ 26516.18156\n",
      "2019-11-05 09:35:00| Sold 80 NQ @ 8172.173998075\n",
      "2019-11-05 23:00:00 | Net Asset Value = 163707.05\n",
      "2019-11-06 23:00:00 | Net Asset Value = 164431.05\n",
      "2019-11-07 09:30:00| Bot 29 YM @ 26704.20412\n",
      "2019-11-07 09:30:00| Sold 80 NQ @ 8197.173765575\n",
      "2019-11-07 23:00:00 | Net Asset Value = 167339.03\n",
      "2019-11-10 23:00:00 | Net Asset Value = 167770.03\n",
      "2019-11-11 23:00:00 | Net Asset Value = 167770.03\n",
      "2019-11-12 23:00:00 | Net Asset Value = 167770.03\n",
      "2019-11-13 23:00:00 | Net Asset Value = 167770.03\n",
      "2019-11-14 23:00:00 | Net Asset Value = 167770.03\n",
      "2019-11-17 23:00:00 | Net Asset Value = 167770.03\n",
      "2019-11-18 09:30:00| Bot 30 YM @ 27072.24828\n",
      "2019-11-18 09:30:00| Sold 81 NQ @ 8259.42318665\n",
      "2019-11-18 23:00:00 | Net Asset Value = 165615.86\n",
      "2019-11-19 09:35:00| Sold 29 YM @ 27097.74788\n",
      "2019-11-19 09:35:00| Bot 79 NQ @ 8313.0773109\n",
      "2019-11-19 23:00:00 | Net Asset Value = 166259.94\n",
      "2019-11-20 23:00:00 | Net Asset Value = 167429.44\n",
      "2019-11-21 23:00:00 | Net Asset Value = 167429.44\n",
      "2019-11-22 09:50:00| Bot 32 YM @ 26903.228\n",
      "2019-11-22 09:50:00| Sold 81 NQ @ 8239.42337265\n",
      "2019-11-24 23:00:00 | Net Asset Value = 169215.19\n",
      "2019-11-25 09:30:00| Sold 33 YM @ 27025.75652\n",
      "2019-11-25 09:30:00| Bot 81 NQ @ 8294.57713885\n",
      "2019-11-25 23:00:00 | Net Asset Value = 168655.65\n",
      "2019-11-26 23:00:00 | Net Asset Value = 168045.15\n",
      "2019-11-27 09:30:00| Sold 32 YM @ 27171.739\n",
      "2019-11-27 09:30:00| Bot 80 NQ @ 8370.077841\n",
      "2019-11-27 23:00:00 | Net Asset Value = 169498.58\n",
      "2019-11-28 23:00:00 | Net Asset Value = 170414.58\n",
      "2019-12-01 23:00:00 | Net Asset Value = 170414.58\n",
      "2019-12-02 09:30:00| Bot 32 YM @ 27164.25932\n",
      "2019-12-02 09:30:00| Sold 81 NQ @ 8356.672282225\n",
      "2019-12-02 23:00:00 | Net Asset Value = 168204.48\n",
      "2019-12-03 09:30:00| Sold 31 YM @ 26581.8098\n",
      "2019-12-03 09:30:00| Bot 81 NQ @ 8173.57601355\n",
      "2019-12-03 23:00:00 | Net Asset Value = 170254.68\n",
      "2019-12-04 09:40:00| Bot 31 YM @ 26770.21204\n",
      "2019-12-04 09:40:00| Sold 81 NQ @ 8259.173188975\n",
      "2019-12-04 23:00:00 | Net Asset Value = 168403.13\n",
      "2019-12-05 09:40:00| Sold 30 YM @ 26720.79312\n",
      "2019-12-05 09:40:00| Bot 81 NQ @ 8274.0769482\n",
      "2019-12-05 23:00:00 | Net Asset Value = 166647.44\n",
      "2019-12-06 09:30:00| Bot 29 YM @ 27003.24\n",
      "2019-12-06 09:30:00| Sold 79 NQ @ 8333.172500775\n",
      "2019-12-08 23:00:00 | Net Asset Value = 166563.61\n",
      "2019-12-09 09:35:00| Sold 29 YM @ 27089.74884\n",
      "2019-12-09 09:35:00| Bot 79 NQ @ 8373.0778689\n",
      "2019-12-09 23:00:00 | Net Asset Value = 164909.68\n",
      "2019-12-10 09:35:00| Sold 29 YM @ 26913.76996\n",
      "2019-12-10 09:35:00| Bot 79 NQ @ 8306.327248125\n",
      "2019-12-10 23:00:00 | Net Asset Value = 164480.15\n",
      "2019-12-11 09:30:00| Sold 29 YM @ 26939.76684\n",
      "2019-12-11 09:30:00| Bot 80 NQ @ 8331.827485275\n",
      "2019-12-11 23:00:00 | Net Asset Value = 167239.19\n",
      "2019-12-12 23:00:00 | Net Asset Value = 167094.19\n",
      "2019-12-15 23:00:00 | Net Asset Value = 167094.19\n",
      "2019-12-16 09:40:00| Sold 27 YM @ 27365.71572\n",
      "2019-12-16 09:40:00| Bot 78 NQ @ 8523.329266225\n",
      "2019-12-16 23:00:00 | Net Asset Value = 169231.33\n",
      "2019-12-17 09:45:00| Bot 28 YM @ 27364.28332\n",
      "2019-12-17 09:45:00| Sold 79 NQ @ 8531.9206524\n",
      "2019-12-17 23:00:00 | Net Asset Value = 169707.38\n",
      "2019-12-18 23:00:00 | Net Asset Value = 169530.38\n",
      "2019-12-19 23:00:00 | Net Asset Value = 169530.38\n",
      "2019-12-20 09:55:00| Bot 27 YM @ 27599.31152\n",
      "2019-12-20 09:55:00| Sold 78 NQ @ 8620.9198247\n",
      "2019-12-22 23:00:00 | Net Asset Value = 166749.72\n",
      "2019-12-23 23:00:00 | Net Asset Value = 167486.22\n",
      "2019-12-25 23:00:00 | Net Asset Value = 167486.22\n",
      "2019-12-26 23:00:00 | Net Asset Value = 167486.22\n",
      "2019-12-27 09:55:00| Bot 27 YM @ 27707.32448\n",
      "2019-12-27 09:55:00| Sold 76 NQ @ 8715.41894585\n",
      "2019-12-29 23:00:00 | Net Asset Value = 166616.3\n",
      "2019-12-30 09:45:00| Bot 31 YM @ 27601.31176\n",
      "2019-12-30 09:45:00| Sold 77 NQ @ 8642.41962475\n",
      "stopped\n",
      "2019-12-30 23:00:00 | Net Asset Value = 164529.19\n",
      "2020-01-01 23:00:00 | Net Asset Value = 164529.19\n",
      "2020-01-02 09:30:00| Sold 31 YM @ 27735.67132\n",
      "2020-01-02 09:30:00| Bot 75 NQ @ 8768.831549375\n",
      "2020-01-02 23:00:00 | Net Asset Value = 163549.64\n",
      "2020-01-03 09:35:00| Sold 29 YM @ 27713.67396\n",
      "2020-01-03 09:35:00| Bot 74 NQ @ 8755.831428475\n",
      "---------------------------------------------------------------------------\n",
      "2020-01-03 16:55:00 | +++ CLOSING FINAL POSITION +++\n",
      "2020-01-03 16:55:00 | closing position of 0 ES for 3160.0\n",
      "2020-01-03 16:55:00 | closing position of 74 NQ for 8745.75\n",
      "2020-01-03 16:55:00 | closing position of -29 YM for 27699.0\n",
      "2020-01-03 16:55:00 | closing position of 0 RTY for 3160.0\n",
      "2020-01-03 16:55:00| Current Balance: 163627.91\n",
      "2020-01-03 16:55:00 | net performance (%) = 63.63\n",
      "2020-01-03 16:55:00 | number of trades executed = 731.0\n",
      "per trade: 87.04228064870027\n",
      "---------------------------------------------------------------------------\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NQClose</th>\n",
       "      <th>YMClose</th>\n",
       "      <th>ESClose</th>\n",
       "      <th>RTYClose</th>\n",
       "      <th>NQxperiodReturn</th>\n",
       "      <th>YMxperiodReturn</th>\n",
       "      <th>ESyperiodReturn</th>\n",
       "      <th>NQyperiodReturn</th>\n",
       "      <th>YMyperiodReturn</th>\n",
       "      <th>NQret</th>\n",
       "      <th>YMret</th>\n",
       "      <th>ESret</th>\n",
       "      <th>NQVol</th>\n",
       "      <th>YMvol</th>\n",
       "      <th>ESvol</th>\n",
       "      <th>YMmultiplier</th>\n",
       "      <th>ESmultiplier</th>\n",
       "      <th>hour</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2018-01-15 07:25:00</th>\n",
       "      <td>6912.75</td>\n",
       "      <td>25117.0</td>\n",
       "      <td>2748.75</td>\n",
       "      <td>2748.75</td>\n",
       "      <td>0.003042</td>\n",
       "      <td>0.008155</td>\n",
       "      <td>0.003097</td>\n",
       "      <td>0.002462</td>\n",
       "      <td>0.007232</td>\n",
       "      <td>0.000289</td>\n",
       "      <td>0.000159</td>\n",
       "      <td>0.000182</td>\n",
       "      <td>0.000328</td>\n",
       "      <td>0.000265</td>\n",
       "      <td>0.000249</td>\n",
       "      <td>1.239996</td>\n",
       "      <td>1.317588</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-01-15 07:30:00</th>\n",
       "      <td>6910.25</td>\n",
       "      <td>25111.0</td>\n",
       "      <td>2748.00</td>\n",
       "      <td>2748.00</td>\n",
       "      <td>0.002354</td>\n",
       "      <td>0.007796</td>\n",
       "      <td>0.002733</td>\n",
       "      <td>0.001847</td>\n",
       "      <td>0.007074</td>\n",
       "      <td>-0.000362</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000273</td>\n",
       "      <td>0.000328</td>\n",
       "      <td>0.000265</td>\n",
       "      <td>0.000249</td>\n",
       "      <td>1.240110</td>\n",
       "      <td>1.317569</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-01-15 07:35:00</th>\n",
       "      <td>6910.25</td>\n",
       "      <td>25115.0</td>\n",
       "      <td>2748.75</td>\n",
       "      <td>2748.75</td>\n",
       "      <td>0.001847</td>\n",
       "      <td>0.007554</td>\n",
       "      <td>0.002732</td>\n",
       "      <td>0.001593</td>\n",
       "      <td>0.007073</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000159</td>\n",
       "      <td>0.000273</td>\n",
       "      <td>0.000328</td>\n",
       "      <td>0.000265</td>\n",
       "      <td>0.000249</td>\n",
       "      <td>1.240078</td>\n",
       "      <td>1.316918</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-01-15 07:40:00</th>\n",
       "      <td>6911.25</td>\n",
       "      <td>25123.0</td>\n",
       "      <td>2749.00</td>\n",
       "      <td>2749.00</td>\n",
       "      <td>0.002209</td>\n",
       "      <td>0.007993</td>\n",
       "      <td>0.002823</td>\n",
       "      <td>0.001774</td>\n",
       "      <td>0.007431</td>\n",
       "      <td>0.000145</td>\n",
       "      <td>0.000318</td>\n",
       "      <td>0.000091</td>\n",
       "      <td>0.000328</td>\n",
       "      <td>0.000265</td>\n",
       "      <td>0.000249</td>\n",
       "      <td>1.239799</td>\n",
       "      <td>1.316912</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-01-15 07:45:00</th>\n",
       "      <td>6912.50</td>\n",
       "      <td>25122.0</td>\n",
       "      <td>2749.50</td>\n",
       "      <td>2749.50</td>\n",
       "      <td>0.001991</td>\n",
       "      <td>0.007111</td>\n",
       "      <td>0.003005</td>\n",
       "      <td>0.002209</td>\n",
       "      <td>0.007391</td>\n",
       "      <td>0.000181</td>\n",
       "      <td>-0.000040</td>\n",
       "      <td>0.000182</td>\n",
       "      <td>0.000328</td>\n",
       "      <td>0.000265</td>\n",
       "      <td>0.000249</td>\n",
       "      <td>1.240011</td>\n",
       "      <td>1.316875</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-03 16:35:00</th>\n",
       "      <td>8741.25</td>\n",
       "      <td>27690.0</td>\n",
       "      <td>3159.25</td>\n",
       "      <td>3159.25</td>\n",
       "      <td>-0.000772</td>\n",
       "      <td>-0.001227</td>\n",
       "      <td>-0.000712</td>\n",
       "      <td>-0.002485</td>\n",
       "      <td>-0.002489</td>\n",
       "      <td>0.000057</td>\n",
       "      <td>-0.000036</td>\n",
       "      <td>0.000079</td>\n",
       "      <td>0.000387</td>\n",
       "      <td>0.000312</td>\n",
       "      <td>0.000309</td>\n",
       "      <td>1.240618</td>\n",
       "      <td>1.252276</td>\n",
       "      <td>16</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-03 16:40:00</th>\n",
       "      <td>8740.75</td>\n",
       "      <td>27684.0</td>\n",
       "      <td>3158.75</td>\n",
       "      <td>3158.75</td>\n",
       "      <td>-0.000743</td>\n",
       "      <td>-0.001408</td>\n",
       "      <td>-0.000791</td>\n",
       "      <td>-0.002685</td>\n",
       "      <td>-0.002742</td>\n",
       "      <td>-0.000057</td>\n",
       "      <td>-0.000217</td>\n",
       "      <td>-0.000158</td>\n",
       "      <td>0.000387</td>\n",
       "      <td>0.000312</td>\n",
       "      <td>0.000309</td>\n",
       "      <td>1.240430</td>\n",
       "      <td>1.252140</td>\n",
       "      <td>16</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-03 16:45:00</th>\n",
       "      <td>8742.75</td>\n",
       "      <td>27689.0</td>\n",
       "      <td>3159.25</td>\n",
       "      <td>3159.25</td>\n",
       "      <td>-0.000715</td>\n",
       "      <td>-0.001371</td>\n",
       "      <td>-0.000396</td>\n",
       "      <td>-0.001943</td>\n",
       "      <td>-0.002237</td>\n",
       "      <td>0.000229</td>\n",
       "      <td>0.000181</td>\n",
       "      <td>0.000158</td>\n",
       "      <td>0.000387</td>\n",
       "      <td>0.000312</td>\n",
       "      <td>0.000309</td>\n",
       "      <td>1.240449</td>\n",
       "      <td>1.252157</td>\n",
       "      <td>16</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-03 16:50:00</th>\n",
       "      <td>8742.50</td>\n",
       "      <td>27691.0</td>\n",
       "      <td>3159.75</td>\n",
       "      <td>3159.75</td>\n",
       "      <td>-0.001086</td>\n",
       "      <td>-0.001588</td>\n",
       "      <td>0.000158</td>\n",
       "      <td>-0.001629</td>\n",
       "      <td>-0.002020</td>\n",
       "      <td>-0.000029</td>\n",
       "      <td>0.000072</td>\n",
       "      <td>0.000158</td>\n",
       "      <td>0.000387</td>\n",
       "      <td>0.000312</td>\n",
       "      <td>0.000309</td>\n",
       "      <td>1.240437</td>\n",
       "      <td>1.252097</td>\n",
       "      <td>16</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-03 16:55:00</th>\n",
       "      <td>8745.75</td>\n",
       "      <td>27699.0</td>\n",
       "      <td>3160.00</td>\n",
       "      <td>3160.00</td>\n",
       "      <td>-0.000343</td>\n",
       "      <td>-0.001046</td>\n",
       "      <td>0.000871</td>\n",
       "      <td>-0.000657</td>\n",
       "      <td>-0.001082</td>\n",
       "      <td>0.000372</td>\n",
       "      <td>0.000289</td>\n",
       "      <td>0.000079</td>\n",
       "      <td>0.000387</td>\n",
       "      <td>0.000312</td>\n",
       "      <td>0.000309</td>\n",
       "      <td>1.240424</td>\n",
       "      <td>1.252332</td>\n",
       "      <td>16</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>137775 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     NQClose  YMClose  ESClose  RTYClose  NQxperiodReturn  \\\n",
       "0                                                                           \n",
       "2018-01-15 07:25:00  6912.75  25117.0  2748.75   2748.75         0.003042   \n",
       "2018-01-15 07:30:00  6910.25  25111.0  2748.00   2748.00         0.002354   \n",
       "2018-01-15 07:35:00  6910.25  25115.0  2748.75   2748.75         0.001847   \n",
       "2018-01-15 07:40:00  6911.25  25123.0  2749.00   2749.00         0.002209   \n",
       "2018-01-15 07:45:00  6912.50  25122.0  2749.50   2749.50         0.001991   \n",
       "...                      ...      ...      ...       ...              ...   \n",
       "2020-01-03 16:35:00  8741.25  27690.0  3159.25   3159.25        -0.000772   \n",
       "2020-01-03 16:40:00  8740.75  27684.0  3158.75   3158.75        -0.000743   \n",
       "2020-01-03 16:45:00  8742.75  27689.0  3159.25   3159.25        -0.000715   \n",
       "2020-01-03 16:50:00  8742.50  27691.0  3159.75   3159.75        -0.001086   \n",
       "2020-01-03 16:55:00  8745.75  27699.0  3160.00   3160.00        -0.000343   \n",
       "\n",
       "                     YMxperiodReturn  ESyperiodReturn  NQyperiodReturn  \\\n",
       "0                                                                        \n",
       "2018-01-15 07:25:00         0.008155         0.003097         0.002462   \n",
       "2018-01-15 07:30:00         0.007796         0.002733         0.001847   \n",
       "2018-01-15 07:35:00         0.007554         0.002732         0.001593   \n",
       "2018-01-15 07:40:00         0.007993         0.002823         0.001774   \n",
       "2018-01-15 07:45:00         0.007111         0.003005         0.002209   \n",
       "...                              ...              ...              ...   \n",
       "2020-01-03 16:35:00        -0.001227        -0.000712        -0.002485   \n",
       "2020-01-03 16:40:00        -0.001408        -0.000791        -0.002685   \n",
       "2020-01-03 16:45:00        -0.001371        -0.000396        -0.001943   \n",
       "2020-01-03 16:50:00        -0.001588         0.000158        -0.001629   \n",
       "2020-01-03 16:55:00        -0.001046         0.000871        -0.000657   \n",
       "\n",
       "                     YMyperiodReturn     NQret     YMret     ESret     NQVol  \\\n",
       "0                                                                              \n",
       "2018-01-15 07:25:00         0.007232  0.000289  0.000159  0.000182  0.000328   \n",
       "2018-01-15 07:30:00         0.007074 -0.000362 -0.000239 -0.000273  0.000328   \n",
       "2018-01-15 07:35:00         0.007073  0.000000  0.000159  0.000273  0.000328   \n",
       "2018-01-15 07:40:00         0.007431  0.000145  0.000318  0.000091  0.000328   \n",
       "2018-01-15 07:45:00         0.007391  0.000181 -0.000040  0.000182  0.000328   \n",
       "...                              ...       ...       ...       ...       ...   \n",
       "2020-01-03 16:35:00        -0.002489  0.000057 -0.000036  0.000079  0.000387   \n",
       "2020-01-03 16:40:00        -0.002742 -0.000057 -0.000217 -0.000158  0.000387   \n",
       "2020-01-03 16:45:00        -0.002237  0.000229  0.000181  0.000158  0.000387   \n",
       "2020-01-03 16:50:00        -0.002020 -0.000029  0.000072  0.000158  0.000387   \n",
       "2020-01-03 16:55:00        -0.001082  0.000372  0.000289  0.000079  0.000387   \n",
       "\n",
       "                        YMvol     ESvol  YMmultiplier  ESmultiplier  hour  \\\n",
       "0                                                                           \n",
       "2018-01-15 07:25:00  0.000265  0.000249      1.239996      1.317588     7   \n",
       "2018-01-15 07:30:00  0.000265  0.000249      1.240110      1.317569     7   \n",
       "2018-01-15 07:35:00  0.000265  0.000249      1.240078      1.316918     7   \n",
       "2018-01-15 07:40:00  0.000265  0.000249      1.239799      1.316912     7   \n",
       "2018-01-15 07:45:00  0.000265  0.000249      1.240011      1.316875     7   \n",
       "...                       ...       ...           ...           ...   ...   \n",
       "2020-01-03 16:35:00  0.000312  0.000309      1.240618      1.252276    16   \n",
       "2020-01-03 16:40:00  0.000312  0.000309      1.240430      1.252140    16   \n",
       "2020-01-03 16:45:00  0.000312  0.000309      1.240449      1.252157    16   \n",
       "2020-01-03 16:50:00  0.000312  0.000309      1.240437      1.252097    16   \n",
       "2020-01-03 16:55:00  0.000312  0.000309      1.240424      1.252332    16   \n",
       "\n",
       "                     day  month  \n",
       "0                                \n",
       "2018-01-15 07:25:00    0      1  \n",
       "2018-01-15 07:30:00    0      1  \n",
       "2018-01-15 07:35:00    0      1  \n",
       "2018-01-15 07:40:00    0      1  \n",
       "2018-01-15 07:45:00    0      1  \n",
       "...                  ...    ...  \n",
       "2020-01-03 16:35:00    4      1  \n",
       "2020-01-03 16:40:00    4      1  \n",
       "2020-01-03 16:45:00    4      1  \n",
       "2020-01-03 16:50:00    4      1  \n",
       "2020-01-03 16:55:00    4      1  \n",
       "\n",
       "[137775 rows x 20 columns]"
      ]
     },
     "execution_count": 164,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trade.ym_nq_momentum(180, 198, 9, 11,9,.002, 0, 4) # period, dayperiod, entryhr, checkhr, exithr, x, y, lev)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "27f8e658",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ave. log Return per trade = 0.00098\n",
      "Ave. simple Return per trade = 0.00114\n",
      "Std per trade = 0.017710895927115607\n",
      "Downside dev per trade = 0.012035128425450169\n",
      "CAGR = 28.4%\n",
      "Benchmark CAGR = 7.3%\n",
      "Max Drawdown = -25.3%\n",
      "Max Daily Loss = -8.0%\n",
      "% days down 50% from peak = 0.0%\n",
      "% days down 25% from peak = 0.2%\n",
      "Sortino = 1.13\n",
      "Skew = -0.21\n",
      "Kurtosis = 2.81\n",
      "Kelly Criterion = 3.63\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 900x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "trade.stats(-1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "290f8471",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b78bc343",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
